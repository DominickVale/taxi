{"version":3,"file":"taxi.js","sources":["../src/helpers.js","../src/RouteStore.js","../src/Core.js","../src/Transition.js","../src/View.js"],"sourcesContent":["const parser = new DOMParser()\n\n/**\n * Parse a HTML string into a proper Document.\n * @param {string|Document} html\n * @return {Document|*}\n */\nexport function parseDom(html) {\n\treturn typeof html === 'string' ? parser.parseFromString(html, 'text/html') : html\n}\n\n/**\n * Extract details from a given URL string. Assumed to be on the current TLD.\n * @param {string} url\n * @return {{raw: string, href: string, hasHash: boolean, pathname: string}}\n */\nexport function processUrl(url) {\n\tconst details = new URL(url, window.location.origin)\n\tlet normalized = null\n\n\tif (details.hash.length) {\n\t\tnormalized = url.replace(details.hash, '')\n\t}\n\n\treturn {\n\t\thasHash: details.hash.length > 0,\n\t\tpathname: details.pathname,\n\t\traw: url,\n\t\thref: normalized || details.href\n\t}\n}\n\n/**\n * Reloads a provided script/stylesheet by replacing with itself.\n * @param {HTMLElement} node\n */\nexport function reloadScript(node) {\n\tnode.parentNode.replaceChild(duplicateScript(node), node)\n}\n\n/**\n * Loads a provided script/stylesheet by appending a clone to the current document.\n * @param {HTMLElement} node\n */\nexport function appendScript(node) {\n\tif (node.parentNode.tagName === 'HEAD') {\n\t\tdocument.head.appendChild(duplicateScript(node))\n\t} else {\n\t\tdocument.body.appendChild(duplicateScript(node))\n\t}\n}\n\n/**\n * Creates a clone of a given HTMLElement\n * @param {HTMLElement} node\n * @return {HTMLElement}\n */\nexport function duplicateScript(node) {\n\tconst replacement = document.createElement('SCRIPT')\n\n\t// Loop Over Attributes\n\tfor (let k = 0; k < node.attributes.length; k++) {\n\t\t// Get Attribute\n\t\tconst attr = node.attributes[k]\n\n\t\t// Set Attribute\n\t\treplacement.setAttribute(attr.nodeName, attr.nodeValue)\n\t}\n\n\t// Inline Script\n\tif (node.innerHTML) {\n\t\treplacement.innerHTML = node.innerHTML\n\t}\n\n\treturn replacement\n}\n","export default class RouteStore {\n\t/**\n\t * @type {Map<string, Map<string, string>>}\n\t */\n\tdata = new Map()\n\n\t/**\n\t * @type {Map<string, RegExp>}\n\t */\n\tregexCache = new Map()\n\n\t/**\n\t *\n\t * @param {string} fromPattern\n\t * @param {string} toPattern\n\t * @param {string} transition\n\t */\n\tadd(fromPattern, toPattern, transition) {\n\t\tif (!this.data.has(fromPattern)) {\n\t\t\tthis.data.set(fromPattern, new Map())\n\t\t\tthis.regexCache.set(fromPattern, new RegExp(`^${fromPattern}$`))\n\t\t}\n\n\t\tthis.data.get(fromPattern).set(toPattern, transition)\n\t\tthis.regexCache.set(toPattern, new RegExp(`^${toPattern}$`))\n\t}\n\n\t/**\n\t *\n\t * @param {{ raw: string, href: string, hasHash: boolean, pathname: string }} currentUrl\n\t * @param {{ raw: string, href: string, hasHash: boolean, pathname: string }} nextUrl\n\t * @return {string|null}\n\t */\n\tfindMatch(currentUrl, nextUrl) {\n\t\t// Loop through all from patterns\n\t\tfor (const [fromPattern, potentialMatches] of this.data) {\n\t\t\t// If we have a match\n\t\t\tif (currentUrl.pathname.match(this.regexCache.get(fromPattern))) {\n\t\t\t\t// loop through all associated to patterns\n\t\t\t\tfor (const [toPattern, transition] of potentialMatches) {\n\t\t\t\t\t// If we find a match, return it\n\t\t\t\t\tif (nextUrl.pathname.match(this.regexCache.get(toPattern))) {\n\t\t\t\t\t\treturn transition\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\n\t\treturn null\n\t}\n}\n","import E from '@unseenco/e'\nimport { appendScript, parseDom, processUrl, reloadScript } from './helpers'\nimport { Transition, View } from './taxi'\nimport RouteStore from './RouteStore'\n\n/**\n * @typedef CacheEntry\n * @type {object}\n * @property {View} view\n * @property {Document|Node} page\n * @property {array} scripts\n * @property {string} title\n * @property {HTMLElement|Element} content\n */\n\nexport default class Core {\n\tisTransitioning = false\n\n\t/**\n\t * @type {CacheEntry|null}\n\t */\n\tcurrentView = null\n\n\t/**\n\t * @type {Map<string, CacheEntry>}\n\t */\n\tcache = new Map()\n\n\t/**\n\t * @param {string} [parameters.links] Selector to select elements attach highway link events to\n\t * @param {Object.<string, View>} [parameters.views] All Views for the application\n\t * @param {Object.<string, Transition>} [parameters.transitions] All Transitions for the application\n\t * @param {function(node: HTMLElement)} [parameters.reloadJsFilter]\n\t */\n\tconstructor(parameters = {}) {\n\t\tconst {\n\t\t\tlinks = 'a:not([target]):not([href^=\\\\#]):not([data-taxi-ignore])',\n\t\t\tviews = {\n\t\t\t\tdefault: View\n\t\t\t},\n\t\t\ttransitions = {\n\t\t\t\tdefault: Transition\n\t\t\t},\n\t\t\treloadJsFilter = function(node) {\n\t\t\t\treturn !(node?.id === '__bs_script__' || node?.src.includes('browser-sync-client.js'))\n\t\t\t}\n\t\t} = parameters\n\n\t\tthis.views = views\n\t\tthis.transitions = transitions\n\t\tthis.defaultView = this.views.default || View\n\t\tthis.defaultTransition = this.transitions.default || Transition\n\t\tthis.wrapper = document.querySelector('[data-taxi]')\n\t\tthis.reloadJsFilter = reloadJsFilter\n\t\tthis.cache = new Map()\n\n\t\t// Add delegated link events\n\t\tthis.attachEvents(links)\n\n\t\tthis.currentLocation = processUrl(window.location.href)\n\n\t\t// as this is the initial page load, prime this page into the cache\n\t\tthis.cache.set(this.currentLocation.href, this.createCacheEntry(document.cloneNode(true)))\n\n\t\t// fire the current view enter methods\n\t\tthis.currentView = this.cache.get(this.currentLocation.href)\n\t\tthis.currentView.view.initialLoad()\n\t}\n\n\t/**\n\t * @param {string} view\n\t */\n\tsetDefaultView(view) {\n\t\tthis.defaultView = this.views[view]\n\t}\n\n\t/**\n\t * @param {string} transition\n\t */\n\tsetDefaultTransition(transition) {\n\t\tthis.defaultTransition = this.transitions[transition]\n\t}\n\n\taddRoute(fromPattern, toPattern, transition) {\n\t\tif (!this.router) {\n\t\t\tthis.router = new RouteStore()\n\t\t}\n\n\t\tthis.router.add(fromPattern, toPattern, transition)\n\t}\n\n\t/**\n\t * Prime the cache for a given URL\n\t *\n\t * @param {string} url\n\t * @return {Core}\n\t */\n\tpreload(url) {\n\t\t// convert relative URLs to absolute\n\t\turl = processUrl(url).href\n\n\t\tif (!this.cache.has(url)) {\n\t\t\tthis.fetch(url).then(async (newPage) => {\n\t\t\t\tthis.cache.set(url, this.createCacheEntry(newPage))\n\t\t\t})\n\t\t}\n\n\t\treturn this\n\t}\n\n\t/**\n\t * @param {string} url\n\t * @param {string|false} [transition]\n\t * @param {string|false|HTMLElement} [trigger]\n\t * @return {Promise<void|Error>}\n\t */\n\tnavigate(url, transition = false, trigger = false) {\n\t\tthis.targetLocation = processUrl(url)\n\n\t\treturn new Promise((resolve, reject) => {\n\t\t\t// Don't allow multiple navigations to occur at once\n\t\t\tif (this.isTransitioning) {\n\t\t\t\treject(new Error('A transition is currently in progress'))\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tconst TransitionClass = new (this.chooseTransition(transition))({ wrapper: this.wrapper })\n\n\t\t\tthis.beforeFetch(this.targetLocation, TransitionClass, trigger)\n\t\t\t\t.then(async () => {\n\t\t\t\t\tif (this.cache.has(this.targetLocation.href)) {\n\t\t\t\t\t\treturn await this.afterFetch(this.targetLocation, TransitionClass, this.cache.get(this.targetLocation.href), trigger)\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn this.fetch(this.targetLocation.raw).then(async (newPage) => {\n\t\t\t\t\t\t\treturn await this.afterFetch(this.targetLocation, TransitionClass, this.createCacheEntry(newPage), trigger)\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.then(() => { resolve() })\n\t\t})\n\t}\n\n\t/**\n\t * Add an event listener.\n\t * @param {string} event\n\t * @param {any} callback\n\t */\n\ton(event, callback) {\n\t\tE.on(event, callback)\n\t}\n\n\t/**\n\t * Remove an event listener.\n\t * @param {string} event\n\t * @param {any} callback\n\t */\n\toff(event, callback) {\n\t\tE.off(event, callback)\n\t}\n\n\t/**\n\t * @private\n\t * @param {{ raw: string, href: string, hasHash: boolean, pathname: string }} url\n\t * @param {Transition} TransitionClass\n\t * @param {string|HTMLElement|false} trigger\n\t * @return {Promise<void>}\n\t */\n\tbeforeFetch(url, TransitionClass, trigger) {\n\t\tthis.isTransitioning = true\n\n\t\tE.emit('NAVIGATE_OUT', {\n\t\t\tfrom: this.currentView,\n\t\t\ttrigger\n\t\t})\n\n\t\treturn new Promise((resolve) => {\n\t\t\tthis.currentView.view.leave(TransitionClass, trigger)\n\t\t\t\t.then(() => {\n\t\t\t\t\tif (trigger !== 'popstate') {\n\t\t\t\t\t\twindow.history.pushState({}, '', url.raw)\n\t\t\t\t\t}\n\n\t\t\t\t\tresolve()\n\t\t\t\t})\n\t\t})\n\t}\n\n\t/**\n\t * @private\n\t * @param {{ raw: string, href: string, hasHash: boolean, pathname: string }} url\n\t * @param {Transition} TransitionClass\n\t * @param {CacheEntry} entry\n\t * @param {string|HTMLElement|false} trigger\n\t * @return {Promise<void>}\n\t */\n\tafterFetch(url, TransitionClass, entry, trigger) {\n\t\t// add this page to cache\n\t\tif (!this.cache.has(url.href)) {\n\t\t\tthis.cache.set(url.href, entry)\n\t\t}\n\n\t\tthis.currentLocation = url\n\n\t\tE.emit('NAVIGATE_IN', {\n\t\t\tfrom: this.currentView,\n\t\t\tto: entry,\n\t\t\ttrigger\n\t\t})\n\n\t\treturn new Promise((resolve) => {\n\t\t\tentry.view.update()\n\n\t\t\tthis.loadScripts(entry.scripts)\n\n\t\t\tentry.view.enter(TransitionClass, trigger)\n\t\t\t\t.then(() => {\n\t\t\t\t\tE.emit('NAVIGATE_END', {\n\t\t\t\t\t\tfrom: this.currentView,\n\t\t\t\t\t\tto: entry,\n\t\t\t\t\t\ttrigger\n\t\t\t\t\t})\n\n\t\t\t\t\tthis.currentView = entry\n\t\t\t\t\tthis.isTransitioning = false\n\t\t\t\t\tresolve()\n\t\t\t\t})\n\t\t})\n\t}\n\n\t/**\n\t * Load up scripts from the target page if needed\n\t *\n\t * @param {HTMLElement[]} cachedScripts\n\t */\n\tloadScripts(cachedScripts) {\n\t\tconst newScripts = [...cachedScripts]\n\t\tconst currentScripts = [...document.querySelectorAll('script:not([data-no-reload])')].filter(this.reloadJsFilter)\n\n\t\t// loop through all new scripts\n\t\tfor (let i = 0; i < currentScripts.length; i++) {\n\t\t\tfor (let n = 0; n < newScripts.length; n++) {\n\t\t\t\tif (currentScripts[i].outerHTML === newScripts[n].outerHTML) {\n\t\t\t\t\treloadScript(currentScripts[i])\n\t\t\t\t\tnewScripts.splice(n, 1)\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (const script of newScripts) {\n\t\t\tappendScript(script)\n\t\t}\n\t}\n\n\t/**\n\t * @private\n\t * @param {string} links\n\t */\n\tattachEvents(links) {\n\t\tE.delegate('click', links, this.onClick)\n\t\tE.on('popstate', window, this.onPopstate)\n\t}\n\n\t/**\n\t * @private\n\t * @param {MouseEvent} e\n\t */\n\tonClick = (e) => {\n\t\tif (!(e.metaKey || e.ctrlKey)) {\n\t\t\tconst target = processUrl(e.currentTarget.href)\n\t\t\tthis.currentLocation = processUrl(window.location.href)\n\n\t\t\t// the target is a new URL, or is removing the hash from the current URL\n\t\t\tif (this.currentLocation.href !== target.href || (this.currentLocation.hasHash && !target.hasHash)) {\n\t\t\t\te.preventDefault()\n\t\t\t\t// noinspection JSIgnoredPromiseFromCall\n\t\t\t\tthis.navigate(target.raw, e.currentTarget.dataset.taxiTransition || false, e.currentTarget)\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\t// a click to the current URL was detected\n\t\t\tif (!this.currentLocation.hasHash && !target.hasHash) {\n\t\t\t\te.preventDefault()\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @private\n\t * @return {boolean}\n\t */\n\tonPopstate = () => {\n\t\t// don't trigger for on-page anchors\n\t\tif (window.location.pathname === this.currentLocation.pathname) {\n\t\t\treturn false\n\t\t}\n\n\t\tif (this.isTransitioning) {\n\t\t\t// overwrite history state with current page if currently navigating\n\t\t\twindow.history.pushState({}, '', this.currentLocation.href)\n\t\t\treturn false\n\t\t}\n\n\t\t// noinspection JSIgnoredPromiseFromCall\n\t\tthis.navigate(window.location.href, false, 'popstate')\n\t}\n\n\t/**\n\t * @private\n\t * @param {string} url\n\t * @return {Promise<Document>}\n\t */\n\tfetch(url) {\n\t\treturn new Promise((resolve) => {\n\t\t\tfetch(url, {\n\t\t\t\tmode: 'same-origin',\n\t\t\t\tmethod: 'GET',\n\t\t\t\theaders: { 'X-Requested-With': 'Taxi' },\n\t\t\t\tcredentials: 'same-origin'\n\t\t\t})\n\t\t\t\t.then((response) => {\n\t\t\t\t\tif (!response.ok) {\n\t\t\t\t\t\tconsole.warn('Taxi encountered a non 2xx HTTP status code')\n\t\t\t\t\t\twindow.location.href = url\n\t\t\t\t\t}\n\n\t\t\t\t\treturn response.text()\n\t\t\t\t})\n\t\t\t\t.then((htmlString) => {\n\t\t\t\t\tresolve(parseDom(htmlString))\n\t\t\t\t})\n\t\t\t\t.catch((err) => {\n\t\t\t\t\tconsole.warn(err)\n\t\t\t\t\twindow.location.href = url\n\t\t\t\t})\n\t\t})\n\t}\n\n\t/**\n\t * @private\n\t * @param {string|false} transition\n\t * @return {Transition|function}\n\t */\n\tchooseTransition(transition) {\n\t\tif (transition) {\n\t\t\treturn this.transitions[transition]\n\t\t}\n\n\t\tconst routeTransition = this.router?.findMatch(this.currentLocation, this.targetLocation)\n\n\t\tif (routeTransition) {\n\t\t\treturn this.transitions[routeTransition]\n\t\t}\n\n\t\treturn this.defaultTransition\n\t}\n\n\t/**\n\t * @private\n\t * @param {Document|Node} page\n\t * @return {CacheEntry}\n\t */\n\tcreateCacheEntry(page) {\n\t\tconst content = page.querySelector('[data-taxi-view]')\n\t\tconst View = content.dataset.taxiView.length ? this.views[content.dataset.taxiView] : this.defaultView\n\n\t\treturn {\n\t\t\tpage,\n\t\t\tcontent,\n\t\t\tscripts: [...page.querySelectorAll('script:not([data-no-reload])')].filter(this.reloadJsFilter),\n\t\t\ttitle: page.title,\n\t\t\tview: new View({\n\t\t\t\twrapper: this.wrapper,\n\t\t\t\ttitle: page.title,\n\t\t\t\tcontent,\n\t\t\t\tpage\n\t\t\t})\n\t\t}\n\t}\n}\n","export default class Transition {\n\t/**\n\t * @param {{wrapper: HTMLElement}} props\n\t */\n\tconstructor({ wrapper }) {\n\t\tthis.wrapper = wrapper\n\t}\n\n\t/**\n\t * @param {{ from: HTMLElement, trigger: string|HTMLElement|false }} props\n\t * @return {Promise<void>}\n\t */\n\tleave(props) {\n\t\treturn new Promise((resolve) => {\n\t\t\tthis.onLeave({ ...props, done: resolve })\n\t\t})\n\t}\n\n\t/**\n\t * @param {{ to: HTMLElement, trigger: string|HTMLElement|false }} props\n\t * @return {Promise<void>}\n\t */\n\tenter(props) {\n\t\treturn new Promise((resolve) => {\n\t\t\tthis.onEnter({ ...props, done: resolve })\n\t\t})\n\t}\n\n\t/**\n\t * Handle the transition leaving the previous page.\n\t * @param {{from: HTMLElement, trigger: string|HTMLElement|false, done: function}} props\n\t */\n\tonLeave({ from, trigger, done }) {\n\t\tdone()\n\t}\n\n\t/**\n\t * Handle the transition entering the next page.\n\t * @param {{to: HTMLElement, trigger: string|HTMLElement|false, done: function}} props\n\t */\n\tonEnter({ to, trigger, done }) {\n\t\tdone()\n\t}\n}\n","import Transition from \"./Transition\"\n\n/**\n * @module Taxi/View\n */\nexport default class View {\n\t/**\n\t * @param {{content: HTMLElement|Element, page: Document|Node, title: string, wrapper: Element}} props\n\t */\n\tconstructor({ content, page, title, wrapper }) {\n\t\tthis.content = content\n\t\tthis.page = page\n\t\tthis.title = title\n\t\tthis.wrapper = wrapper\n\t}\n\n\tonEnter() {\n\n\t}\n\n\tonEnterCompleted() {\n\n\t}\n\n\tonLeave() {\n\n\t}\n\n\tonLeaveCompleted() {\n\n\t}\n\n\tinitialLoad() {\n\t\tthis.onEnter()\n\t\tthis.onEnterCompleted()\n\t}\n\n\tupdate() {\n\t\tdocument.title = this.title\n\t\tthis.wrapper.insertAdjacentHTML('beforeend', this.content.outerHTML)\n\t}\n\n\tremove() {\n\t\tthis.wrapper.firstElementChild.remove()\n\t}\n\n\t/**\n\t * Called when transitioning into the current page.\n\t * @param {Transition} transition\n\t * @param {string|HTMLElement|false} trigger\n\t * @return {Promise<null>}\n\t */\n\tenter(transition, trigger) {\n\t\treturn new Promise((resolve) => {\n\t\t\tthis.onEnter()\n\n\t\t\ttransition.enter({ trigger, to: this.content })\n\t\t\t\t.then(() => {\n\t\t\t\t\tthis.onEnterCompleted()\n\t\t\t\t\tresolve()\n\t\t\t\t})\n\t\t})\n\t}\n\n\t/**\n\t * Called when transitioning away from the current page.\n\t * @param {Transition} transition\n\t * @param {string|HTMLElement|false} trigger\n\t * @return {Promise<null>}\n\t */\n\tleave(transition, trigger) {\n\t\treturn new Promise((resolve) => {\n\t\t\tthis.onLeave()\n\n\t\t\ttransition.leave({ trigger, from: this.content })\n\t\t\t\t.then(() => {\n\t\t\t\t\tthis.remove()\n\t\t\t\t\tthis.onLeaveCompleted()\n\t\t\t\t\tresolve()\n\t\t\t\t})\n\t\t})\n\t}\n}\n"],"names":["parser","DOMParser","processUrl","url","details","URL","window","location","origin","normalized","hash","length","replace","hasHash","pathname","raw","href","appendScript","node","parentNode","tagName","document","head","appendChild","duplicateScript","body","replacement","createElement","k","attributes","attr","setAttribute","nodeName","nodeValue","innerHTML","RouteStore","data","Map","regexCache","add","fromPattern","toPattern","transition","this","has","set","RegExp","get","findMatch","currentUrl","nextUrl","potentialMatches","match","Core","parameters","isTransitioning","currentView","cache","onClick","e","metaKey","ctrlKey","target","currentTarget","_this","currentLocation","preventDefault","navigate","dataset","taxiTransition","onPopstate","history","pushState","links","views","transitions","default","Transition","reloadJsFilter","id","src","includes","View","defaultView","defaultTransition","wrapper","querySelector","attachEvents","createCacheEntry","cloneNode","view","initialLoad","setDefaultView","setDefaultTransition","addRoute","router","preload","fetch","then","newPage","_this2","trigger","targetLocation","Promise","resolve","reject","_this3","Error","TransitionClass","chooseTransition","beforeFetch","afterFetch","on","event","callback","E","off","emit","from","_this4","leave","entry","to","update","_this5","loadScripts","scripts","enter","cachedScripts","newScripts","currentScripts","querySelectorAll","filter","i","n","outerHTML","replaceChild","splice","delegate","mode","method","headers","credentials","response","ok","console","warn","text","htmlString","html","parseFromString","err","routeTransition","_this$router","page","content","taxiView","title","props","onLeave","done","onEnter","onEnterCompleted","onLeaveCompleted","insertAdjacentHTML","remove","firstElementChild"],"mappings":"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"}