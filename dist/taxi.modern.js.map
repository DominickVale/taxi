{"version":3,"file":"taxi.modern.js","sources":["../src/helpers.js","../src/Transition.js","../src/Renderer.js","../src/RouteStore.js","../src/Core.js"],"sourcesContent":["const parser = new DOMParser()\r\n\r\n/**\r\n * Parse a HTML string into a proper Document.\r\n * @param {string|Document} html\r\n * @return {Document|*}\r\n */\r\nexport function parseDom(html) {\r\n\treturn typeof html === 'string' ? parser.parseFromString(html, 'text/html') : html\r\n}\r\n\r\n/**\r\n * Extract details from a given URL string. Assumed to be on the current TLD.\r\n * @param {string} url\r\n * @return {{raw: string, href: string, host: string, hasHash: boolean, pathname: string}}\r\n */\r\nexport function processUrl(url) {\r\n\tconst details = new URL(url, window.location.origin)\r\n\tlet normalized = null\r\n\r\n\tif (details.hash.length) {\r\n\t\tnormalized = url.replace(details.hash, '')\r\n\t}\r\n\r\n\treturn {\r\n\t\thasHash: details.hash.length > 0,\r\n\t\tpathname: details.pathname,\r\n\t\thost: details.host,\r\n\t\traw: url,\r\n\t\thref: normalized || details.href\r\n\t}\r\n}\r\n\r\n/**\r\n * Reloads a provided script/stylesheet by replacing with itself.\r\n * @param {HTMLElement} node\r\n */\r\nexport function reloadScript(node) {\r\n\tnode.parentNode.replaceChild(duplicateScript(node), node)\r\n}\r\n\r\n/**\r\n * Loads a provided script/stylesheet by appending a clone to the current document.\r\n * @param {HTMLElement} node\r\n */\r\nexport function appendScript(node) {\r\n\tif (node.parentNode.tagName === 'HEAD') {\r\n\t\tdocument.head.appendChild(duplicateScript(node))\r\n\t} else {\r\n\t\tdocument.body.appendChild(duplicateScript(node))\r\n\t}\r\n}\r\n\r\n/**\r\n * Creates a clone of a given HTMLElement\r\n * @param {HTMLElement} node\r\n * @return {HTMLElement}\r\n */\r\nexport function duplicateScript(node) {\r\n\tconst replacement = document.createElement('SCRIPT')\r\n\r\n\t// Loop Over Attributes\r\n\tfor (let k = 0; k < node.attributes.length; k++) {\r\n\t\t// Get Attribute\r\n\t\tconst attr = node.attributes[k]\r\n\r\n\t\t// Set Attribute\r\n\t\treplacement.setAttribute(attr.nodeName, attr.nodeValue)\r\n\t}\r\n\r\n\t// Inline Script\r\n\tif (node.innerHTML) {\r\n\t\treplacement.innerHTML = node.innerHTML\r\n\t}\r\n\r\n\treturn replacement\r\n}\r\n","export default class Transition {\r\n\t/**\r\n\t * @param {{wrapper: HTMLElement}} props\r\n\t */\r\n\tconstructor({ wrapper }) {\r\n\t\tthis.wrapper = wrapper\r\n\t}\r\n\r\n\t/**\r\n\t * @param {{ from: HTMLElement|Element, trigger: string|HTMLElement|false }} props\r\n\t * @return {Promise<void>}\r\n\t */\r\n\tleave(props) {\r\n\t\treturn new Promise((resolve) => {\r\n\t\t\tthis.onLeave({ ...props, done: resolve })\r\n\t\t})\r\n\t}\r\n\r\n\t/**\r\n\t * @param {{ to: HTMLElement|Element, trigger: string|HTMLElement|false }} props\r\n\t * @return {Promise<void>}\r\n\t */\r\n\tenter(props) {\r\n\t\treturn new Promise((resolve) => {\r\n\t\t\tthis.onEnter({ ...props, done: resolve })\r\n\t\t})\r\n\t}\r\n\r\n\t/**\r\n\t * Handle the transition leaving the previous page.\r\n\t * @param {{from: HTMLElement|Element, trigger: string|HTMLElement|false, done: function}} props\r\n\t */\r\n\tonLeave({ from, trigger, done }) {\r\n\t\tdone()\r\n\t}\r\n\r\n\t/**\r\n\t * Handle the transition entering the next page.\r\n\t * @param {{to: HTMLElement|Element, trigger: string|HTMLElement|false, done: function}} props\r\n\t */\r\n\tonEnter({ to, trigger, done }) {\r\n\t\tdone()\r\n\t}\r\n}\r\n","import Transition from \"./Transition\"\r\n\r\nexport default class Renderer {\r\n\t/**\r\n\t * @param {{content: HTMLElement|Element, page: Document|Node, title: string, wrapper: Element}} props\r\n\t */\r\n\tconstructor({ content, page, title, wrapper }) {\r\n\t\tthis._contentString = content.outerHTML\r\n\t\tthis.page = page\r\n\t\tthis.title = title\r\n\t\tthis.wrapper = wrapper\r\n\t\tthis.content = this.wrapper.lastElementChild\r\n\t}\r\n\r\n\tonEnter() {\r\n\r\n\t}\r\n\r\n\tonEnterCompleted() {\r\n\r\n\t}\r\n\r\n\tonLeave() {\r\n\r\n\t}\r\n\r\n\tonLeaveCompleted() {\r\n\r\n\t}\r\n\r\n\tinitialLoad() {\r\n\t\tthis.onEnter()\r\n\t\tthis.onEnterCompleted()\r\n\t}\r\n\r\n\tupdate() {\r\n\t\tdocument.title = this.title\r\n\t\tthis.wrapper.insertAdjacentHTML('beforeend', this._contentString)\r\n\t\tthis.content = this.wrapper.lastElementChild\r\n\t}\r\n\r\n\tremove() {\r\n\t\tthis.wrapper.firstElementChild.remove()\r\n\t}\r\n\r\n\t/**\r\n\t * Called when transitioning into the current page.\r\n\t * @param {Transition} transition\r\n\t * @param {string|HTMLElement|false} trigger\r\n\t * @return {Promise<null>}\r\n\t */\r\n\tenter(transition, trigger) {\r\n\t\treturn new Promise((resolve) => {\r\n\t\t\tthis.onEnter()\r\n\r\n\t\t\ttransition.enter({ trigger, to: this.content })\r\n\t\t\t\t.then(() => {\r\n\t\t\t\t\tthis.onEnterCompleted()\r\n\t\t\t\t\tresolve()\r\n\t\t\t\t})\r\n\t\t})\r\n\t}\r\n\r\n\t/**\r\n\t * Called when transitioning away from the current page.\r\n\t * @param {Transition} transition\r\n\t * @param {string|HTMLElement|false} trigger\r\n\t * @param {boolean} removeOldContent\r\n\t * @return {Promise<null>}\r\n\t */\r\n\tleave(transition, trigger, removeOldContent) {\r\n\t\treturn new Promise((resolve) => {\r\n\t\t\tthis.onLeave()\r\n\r\n\t\t\ttransition.leave({ trigger, from: this.content })\r\n\t\t\t\t.then(() => {\r\n\t\t\t\t\tif (removeOldContent) {\r\n\t\t\t\t\t\tthis.remove()\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis.onLeaveCompleted()\r\n\t\t\t\t\tresolve()\r\n\t\t\t\t})\r\n\t\t})\r\n\t}\r\n}\r\n","export default class RouteStore {\r\n\t/**\r\n\t * @type {Map<string, Map<string, string>>}\r\n\t */\r\n\tdata = new Map()\r\n\r\n\t/**\r\n\t * @type {Map<string, RegExp>}\r\n\t */\r\n\tregexCache = new Map()\r\n\r\n\t/**\r\n\t *\r\n\t * @param {string} fromPattern\r\n\t * @param {string} toPattern\r\n\t * @param {string} transition\r\n\t */\r\n\tadd(fromPattern, toPattern, transition) {\r\n\t\tif (!this.data.has(fromPattern)) {\r\n\t\t\tthis.data.set(fromPattern, new Map())\r\n\t\t\tthis.regexCache.set(fromPattern, new RegExp(`^${fromPattern}$`))\r\n\t\t}\r\n\r\n\t\tthis.data.get(fromPattern).set(toPattern, transition)\r\n\t\tthis.regexCache.set(toPattern, new RegExp(`^${toPattern}$`))\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param {{ raw: string, href: string, hasHash: boolean, pathname: string }} currentUrl\r\n\t * @param {{ raw: string, href: string, hasHash: boolean, pathname: string }} nextUrl\r\n\t * @return {string|null}\r\n\t */\r\n\tfindMatch(currentUrl, nextUrl) {\r\n\t\t// Loop through all from patterns\r\n\t\tfor (const [fromPattern, potentialMatches] of this.data) {\r\n\t\t\t// If we have a match\r\n\t\t\tif (currentUrl.pathname.match(this.regexCache.get(fromPattern))) {\r\n\t\t\t\t// loop through all associated to patterns\r\n\t\t\t\tfor (const [toPattern, transition] of potentialMatches) {\r\n\t\t\t\t\t// If we find a match, return it\r\n\t\t\t\t\tif (nextUrl.pathname.match(this.regexCache.get(toPattern))) {\r\n\t\t\t\t\t\treturn transition\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbreak\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn null\r\n\t}\r\n}\r\n","import E from '@unseenco/e'\r\nimport { appendScript, parseDom, processUrl, reloadScript } from './helpers'\r\nimport Transition from './Transition'\r\nimport Renderer from './Renderer'\r\nimport RouteStore from './RouteStore'\r\n\r\nconst IN_PROGRESS = 'A transition is currently in progress'\r\n\r\n/**\r\n * @typedef CacheEntry\r\n * @type {object}\r\n * @property {Renderer} renderer\r\n * @property {Document|Node} page\r\n * @property {array} scripts\r\n * @property {string} title\r\n * @property {HTMLElement|Element} content\r\n */\r\n\r\nexport default class Core {\r\n\tisTransitioning = false\r\n\r\n\t/**\r\n\t * @type {CacheEntry|null}\r\n\t */\r\n\tcurrentCacheEntry = null\r\n\r\n\t/**\r\n\t * @type {Map<string, CacheEntry>}\r\n\t */\r\n\tcache = new Map()\r\n\r\n\t/**\r\n\t * @param {{\r\n\t * \t\tlinks?: string,\r\n\t * \t\tremoveOldContent?: boolean,\r\n\t * \t\tallowInterruption?: boolean,\r\n\t * \t\trenderers?: Object.<string, Renderer>,\r\n\t * \t\ttransitions?: Object.<string, Transition>,\r\n\t * \t\treloadJsFilter?: boolean|function(HTMLElement): boolean\r\n\t * }} parameters\r\n\t */\r\n\tconstructor(parameters = {}) {\r\n\t\tconst {\r\n\t\t\tlinks = 'a:not([target]):not([href^=\\\\#]):not([data-taxi-ignore])',\r\n\t\t\tremoveOldContent = true,\r\n\t\t\tallowInterruption = false,\r\n\t\t\trenderers = {\r\n\t\t\t\tdefault: Renderer\r\n\t\t\t},\r\n\t\t\ttransitions = {\r\n\t\t\t\tdefault: Transition\r\n\t\t\t},\r\n\t\t\treloadJsFilter = (element) => element.dataset.taxiReload !== undefined\r\n\t\t} = parameters\r\n\r\n\t\tthis.renderers = renderers\r\n\t\tthis.transitions = transitions\r\n\t\tthis.defaultRenderer = this.renderers.default || Renderer\r\n\t\tthis.defaultTransition = this.transitions.default || Transition\r\n\t\tthis.wrapper = document.querySelector('[data-taxi]')\r\n\t\tthis.reloadJsFilter = reloadJsFilter\r\n\t\tthis.removeOldContent = removeOldContent\r\n\t\tthis.allowInterruption = allowInterruption\r\n\t\tthis.cache = new Map()\r\n\t\tthis.isPopping = false\r\n\r\n\t\t// Add delegated link events\r\n\t\tthis.attachEvents(links)\r\n\r\n\t\tthis.currentLocation = processUrl(window.location.href)\r\n\r\n\t\t// as this is the initial page load, prime this page into the cache\r\n\t\tthis.cache.set(this.currentLocation.href, this.createCacheEntry(document.cloneNode(true)))\r\n\r\n\t\t// fire the current Renderer enter methods\r\n\t\tthis.currentCacheEntry = this.cache.get(this.currentLocation.href)\r\n\t\tthis.currentCacheEntry.renderer.initialLoad()\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} renderer\r\n\t */\r\n\tsetDefaultRenderer(renderer) {\r\n\t\tthis.defaultRenderer = this.renderers[renderer]\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} transition\r\n\t */\r\n\tsetDefaultTransition(transition) {\r\n\t\tthis.defaultTransition = this.transitions[transition]\r\n\t}\r\n\r\n\t/**\r\n\t * Registers a route into the RouteStore\r\n\t *\r\n\t * @param {string} fromPattern\r\n\t * @param {string} toPattern\r\n\t * @param {string} transition\r\n\t */\r\n\taddRoute(fromPattern, toPattern, transition) {\r\n\t\tif (!this.router) {\r\n\t\t\tthis.router = new RouteStore()\r\n\t\t}\r\n\r\n\t\tthis.router.add(fromPattern, toPattern, transition)\r\n\t}\r\n\r\n\t/**\r\n\t * Prime the cache for a given URL\r\n\t *\r\n\t * @param {string} url\r\n\t * @return {Promise}\r\n\t */\r\n\tpreload(url) {\r\n\t\t// convert relative URLs to absolute\r\n\t\turl = processUrl(url).href\r\n\r\n\t\tif (!this.cache.has(url)) {\r\n\t\t\treturn this.fetch(url)\r\n\t\t\t\t.then(async (newPage) => {\r\n\t\t\t\t\tthis.cache.set(url, this.createCacheEntry(newPage))\r\n\t\t\t\t})\r\n\t\t}\r\n\r\n\t\treturn Promise.resolve()\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the HTML cache for the current URL\r\n\t * Useful when adding/removing content via AJAX such as a search page or infinite loader\r\n\t */\r\n\tupdateCache() {\r\n\t\tconst key = processUrl(window.location.href).href\r\n\r\n\t\tif (this.cache.has(key)) {\r\n\t\t\tthis.cache.delete(key)\r\n\t\t\tthis.cache.set(key, this.createCacheEntry(document.cloneNode(true)))\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Clears the cache for a given URL.\r\n\t * If no URL is passed, then cache for the current page is cleared.\r\n\t *\r\n\t * @param {string} [url]\r\n\t */\r\n\tclearCache(url) {\r\n\t\tconst key = processUrl(url || window.location.href).href\r\n\r\n\t\tif (this.cache.has(key)) {\r\n\t\t\tthis.cache.delete(key)\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} url\r\n\t * @param {string|false} [transition]\r\n\t * @param {string|false|HTMLElement} [trigger]\r\n\t * @return {Promise<void|Error>}\r\n\t */\r\n\tnavigateTo(url, transition = false, trigger = false) {\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\t// Don't allow multiple navigations to occur at once\r\n\t\t\tif (!this.allowInterruption && this.isTransitioning) {\r\n\t\t\t\treject(new Error(IN_PROGRESS))\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\r\n\t\t\tthis.isTransitioning = true\r\n\r\n\t\t\tthis.targetLocation = processUrl(url)\r\n\r\n\t\t\tconst TransitionClass = new (this.chooseTransition(transition))({ wrapper: this.wrapper })\r\n\r\n\t\t\tthis.beforeFetch(this.targetLocation, TransitionClass, trigger)\r\n\t\t\t\t.then(async () => {\r\n\t\t\t\t\tif (this.cache.has(this.targetLocation.href)) {\r\n\t\t\t\t\t\treturn await this.afterFetch(this.targetLocation, TransitionClass, this.cache.get(this.targetLocation.href), trigger)\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn this.fetch(this.targetLocation.raw).then(async (newPage) => {\r\n\t\t\t\t\t\t\treturn await this.afterFetch(this.targetLocation, TransitionClass, this.createCacheEntry(newPage), trigger)\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\t.then(() => {\r\n\t\t\t\t\tresolve()\r\n\t\t\t\t})\r\n\t\t})\r\n\t}\r\n\r\n\t/**\r\n\t * Add an event listener.\r\n\t * @param {string} event\r\n\t * @param {any} callback\r\n\t */\r\n\ton(event, callback) {\r\n\t\tE.on(event, callback)\r\n\t}\r\n\r\n\t/**\r\n\t * Remove an event listener.\r\n\t * @param {string} event\r\n\t * @param {any} [callback]\r\n\t */\r\n\toff(event, callback) {\r\n\t\tE.off(event, callback)\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t * @param {{ raw: string, href: string, hasHash: boolean, pathname: string }} url\r\n\t * @param {Transition} TransitionClass\r\n\t * @param {string|HTMLElement|false} trigger\r\n\t * @return {Promise<void>}\r\n\t */\r\n\tbeforeFetch(url, TransitionClass, trigger) {\r\n\t\tE.emit('NAVIGATE_OUT', {\r\n\t\t\tfrom: this.currentCacheEntry,\r\n\t\t\ttrigger\r\n\t\t})\r\n\r\n\t\treturn new Promise((resolve) => {\r\n\t\t\tthis.currentCacheEntry.renderer.leave(TransitionClass, trigger, this.removeOldContent)\r\n\t\t\t\t.then(() => {\r\n\t\t\t\t\tif (trigger !== 'popstate') {\r\n\t\t\t\t\t\twindow.history.pushState({}, '', url.raw)\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tresolve()\r\n\t\t\t\t})\r\n\t\t})\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t * @param {{ raw: string, href: string, host: string, hasHash: boolean, pathname: string }} url\r\n\t * @param {Transition} TransitionClass\r\n\t * @param {CacheEntry} entry\r\n\t * @param {string|HTMLElement|false} trigger\r\n\t * @return {Promise<void>}\r\n\t */\r\n\tafterFetch(url, TransitionClass, entry, trigger) {\r\n\t\t// add this page to cache\r\n\t\tif (!this.cache.has(url.href)) {\r\n\t\t\tthis.cache.set(url.href, entry)\r\n\t\t}\r\n\r\n\t\tthis.currentLocation = url\r\n\r\n\t\treturn new Promise((resolve) => {\r\n\t\t\tentry.renderer.update()\r\n\r\n\t\t\tE.emit('NAVIGATE_IN', {\r\n\t\t\t\tfrom: this.currentCacheEntry,\r\n\t\t\t\tto: entry,\r\n\t\t\t\ttrigger\r\n\t\t\t})\r\n\r\n\t\t\tif (this.reloadJsFilter) {\r\n\t\t\t\tthis.loadScripts(entry.scripts)\r\n\t\t\t}\r\n\r\n\t\t\tentry.renderer.enter(TransitionClass, trigger)\r\n\t\t\t\t.then(() => {\r\n\t\t\t\t\tE.emit('NAVIGATE_END', {\r\n\t\t\t\t\t\tfrom: this.currentCacheEntry,\r\n\t\t\t\t\t\tto: entry,\r\n\t\t\t\t\t\ttrigger\r\n\t\t\t\t\t})\r\n\r\n\t\t\t\t\tthis.currentCacheEntry = entry\r\n\t\t\t\t\tthis.isTransitioning = false\r\n\t\t\t\t\tthis.isPopping = false\r\n\t\t\t\t\tresolve()\r\n\t\t\t\t})\r\n\t\t})\r\n\t}\r\n\r\n\t/**\r\n\t * Load up scripts from the target page if needed\r\n\t *\r\n\t * @param {HTMLElement[]} cachedScripts\r\n\t */\r\n\tloadScripts(cachedScripts) {\r\n\t\tconst newScripts = [...cachedScripts]\r\n\t\tconst currentScripts = [...document.querySelectorAll('script')].filter(this.reloadJsFilter)\r\n\r\n\t\t// loop through all new scripts\r\n\t\tfor (let i = 0; i < currentScripts.length; i++) {\r\n\t\t\tfor (let n = 0; n < newScripts.length; n++) {\r\n\t\t\t\tif (currentScripts[i].outerHTML === newScripts[n].outerHTML) {\r\n\t\t\t\t\treloadScript(currentScripts[i])\r\n\t\t\t\t\tnewScripts.splice(n, 1)\r\n\t\t\t\t\tbreak\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (const script of newScripts) {\r\n\t\t\tappendScript(script)\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t * @param {string} links\r\n\t */\r\n\tattachEvents(links) {\r\n\t\tE.delegate('click', links, this.onClick)\r\n\t\tE.on('popstate', window, this.onPopstate)\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t * @param {MouseEvent} e\r\n\t */\r\n\tonClick = (e) => {\r\n\t\tif (!(e.metaKey || e.ctrlKey)) {\r\n\t\t\tconst target = processUrl(e.currentTarget.href)\r\n\t\t\tthis.currentLocation = processUrl(window.location.href)\r\n\r\n\t\t\tif (this.currentLocation.host !== target.host) {\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\r\n\t\t\t// the target is a new URL, or is removing the hash from the current URL\r\n\t\t\tif (this.currentLocation.href !== target.href || (this.currentLocation.hasHash && !target.hasHash)) {\r\n\t\t\t\te.preventDefault()\r\n\t\t\t\t// noinspection JSIgnoredPromiseFromCall\r\n\t\t\t\tthis.navigateTo(target.raw, e.currentTarget.dataset.transition || false, e.currentTarget).catch(err => console.warn(err))\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\r\n\t\t\t// a click to the current URL was detected\r\n\t\t\tif (!this.currentLocation.hasHash && !target.hasHash) {\r\n\t\t\t\te.preventDefault()\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t * @return {void|boolean}\r\n\t */\r\n\tonPopstate = () => {\r\n\t\t// don't trigger for on-page anchors\r\n\t\tif (window.location.pathname === this.currentLocation.pathname && !this.isPopping) {\r\n\t\t\treturn false\r\n\t\t}\r\n\r\n\t\tif (!this.allowInterruption && (this.isTransitioning || this.isPopping)) {\r\n\t\t\t// overwrite history state with current page if currently navigating\r\n\t\t\twindow.history.pushState({}, '', this.popTarget)\r\n\t\t\tconsole.warn(IN_PROGRESS)\r\n\t\t\treturn false\r\n\t\t}\r\n\r\n\t\tif (!this.isPopping) {\r\n\t\t\tthis.popTarget = window.location.href\r\n\t\t}\r\n\r\n\t\tthis.isPopping = true\r\n\r\n\t\t// noinspection JSIgnoredPromiseFromCall\r\n\t\tthis.navigateTo(window.location.href, false, 'popstate')\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t * @param {string} url\r\n\t * @return {Promise<Document>}\r\n\t */\r\n\tfetch(url) {\r\n\t\treturn new Promise((resolve) => {\r\n\t\t\tfetch(url, {\r\n\t\t\t\tmode: 'same-origin',\r\n\t\t\t\tmethod: 'GET',\r\n\t\t\t\theaders: { 'X-Requested-With': 'Taxi' },\r\n\t\t\t\tcredentials: 'same-origin'\r\n\t\t\t})\r\n\t\t\t\t.then((response) => {\r\n\t\t\t\t\tif (!response.ok) {\r\n\t\t\t\t\t\tconsole.warn('Taxi encountered a non 2xx HTTP status code')\r\n\t\t\t\t\t\twindow.location.href = url\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn response.text()\r\n\t\t\t\t})\r\n\t\t\t\t.then((htmlString) => {\r\n\t\t\t\t\tresolve(parseDom(htmlString))\r\n\t\t\t\t})\r\n\t\t\t\t.catch((err) => {\r\n\t\t\t\t\tconsole.warn(err)\r\n\t\t\t\t\twindow.location.href = url\r\n\t\t\t\t})\r\n\t\t})\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t * @param {string|false} transition\r\n\t * @return {Transition|function}\r\n\t */\r\n\tchooseTransition(transition) {\r\n\t\tif (transition) {\r\n\t\t\treturn this.transitions[transition]\r\n\t\t}\r\n\r\n\t\tconst routeTransition = this.router?.findMatch(this.currentLocation, this.targetLocation)\r\n\r\n\t\tif (routeTransition) {\r\n\t\t\treturn this.transitions[routeTransition]\r\n\t\t}\r\n\r\n\t\treturn this.defaultTransition\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t * @param {Document|Node} page\r\n\t * @return {CacheEntry}\r\n\t */\r\n\tcreateCacheEntry(page) {\r\n\t\tconst content = page.querySelector('[data-taxi-view]')\r\n\t\tconst Renderer = content.dataset.taxiView.length ? this.renderers[content.dataset.taxiView] : this.defaultRenderer\r\n\r\n\t\treturn {\r\n\t\t\tpage,\r\n\t\t\tcontent,\r\n\t\t\tscripts: this.reloadJsFilter ? [...page.querySelectorAll('script')].filter(this.reloadJsFilter) : [],\r\n\t\t\ttitle: page.title,\r\n\t\t\trenderer: new Renderer({\r\n\t\t\t\twrapper: this.wrapper,\r\n\t\t\t\ttitle: page.title,\r\n\t\t\t\tcontent,\r\n\t\t\t\tpage\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n}\r\n"],"names":["parser","DOMParser","processUrl","url","details","URL","window","location","origin","normalized","hash","length","replace","hasHash","pathname","host","raw","href","appendScript","node","parentNode","tagName","document","head","appendChild","duplicateScript","body","replacement","createElement","k","attributes","attr","setAttribute","nodeName","nodeValue","innerHTML","Transition","constructor","wrapper","this","leave","props","Promise","resolve","onLeave","done","enter","onEnter","Renderer","content","page","title","_contentString","outerHTML","lastElementChild","onEnterCompleted","onLeaveCompleted","initialLoad","update","insertAdjacentHTML","remove","firstElementChild","transition","trigger","to","then","removeOldContent","from","RouteStore","data","Map","regexCache","add","fromPattern","toPattern","has","set","RegExp","get","findMatch","currentUrl","nextUrl","potentialMatches","match","IN_PROGRESS","Core","parameters","isTransitioning","currentCacheEntry","cache","onClick","e","metaKey","ctrlKey","target","currentTarget","currentLocation","preventDefault","navigateTo","dataset","catch","err","console","warn","onPopstate","isPopping","allowInterruption","popTarget","history","pushState","links","renderers","default","transitions","reloadJsFilter","element","undefined","taxiReload","defaultRenderer","defaultTransition","querySelector","attachEvents","createCacheEntry","cloneNode","renderer","setDefaultRenderer","setDefaultTransition","addRoute","router","preload","fetch","async","newPage","_this","updateCache","key","delete","clearCache","reject","Error","targetLocation","TransitionClass","chooseTransition","beforeFetch","_this2","afterFetch","on","event","callback","E","off","emit","entry","loadScripts","scripts","cachedScripts","newScripts","currentScripts","querySelectorAll","filter","i","n","replaceChild","splice","script","delegate","mode","method","headers","credentials","response","ok","text","htmlString","html","parseFromString","routeTransition","_this$router","taxiView"],"mappings":"2BAAA,MAAMA,EAAS,IAAIC,mBAgBHC,EAAWC,GAC1B,MAAMC,EAAU,IAAIC,IAAIF,EAAKG,OAAOC,SAASC,QAC7C,IAAIC,EAAa,KAMjB,OAJIL,EAAQM,KAAKC,SAChBF,EAAaN,EAAIS,QAAQR,EAAQM,KAAM,KAGjC,CACNG,QAAST,EAAQM,KAAKC,OAAS,EAC/BG,SAAUV,EAAQU,SAClBC,KAAMX,EAAQW,KACdC,IAAKb,EACLc,KAAMR,GAAcL,EAAQa,eAgBdC,EAAaC,GACI,SAA5BA,EAAKC,WAAWC,QACnBC,SAASC,KAAKC,YAAYC,EAAgBN,IAE1CG,SAASI,KAAKF,YAAYC,EAAgBN,aAS5BM,EAAgBN,GAC/B,MAAMQ,EAAcL,SAASM,cAAc,UAG3C,IAAK,IAAIC,EAAI,EAAGA,EAAIV,EAAKW,WAAWnB,OAAQkB,IAAK,CAEhD,MAAME,EAAOZ,EAAKW,WAAWD,GAG7BF,EAAYK,aAAaD,EAAKE,SAAUF,EAAKG,WAQ9C,OAJIf,EAAKgB,YACRR,EAAYQ,UAAYhB,EAAKgB,WAGvBR,wNC3EaS,EAIpBC,aAAYC,QAAEA,IACbC,KAAKD,QAAUA,EAOhBE,MAAMC,GACL,WAAWC,QAASC,IACnBJ,KAAKK,aAAaH,GAAOI,KAAMF,OAQjCG,MAAML,GACL,WAAWC,QAASC,IACnBJ,KAAKQ,aAAaN,GAAOI,KAAMF,OAQjCC,SAAQC,KAAiBA,IACxBA,IAODE,SAAQF,KAAeA,IACtBA,WCvCmBG,EAIpBX,aAAYY,QAAEA,EAAFC,KAAWA,EAAXC,MAAiBA,EAAjBb,QAAwBA,IACnCC,KAAKa,eAAiBH,EAAQI,UAC9Bd,KAAKW,KAAOA,EACZX,KAAKY,MAAQA,EACbZ,KAAKD,QAAUA,EACfC,KAAKU,QAAUV,KAAKD,QAAQgB,iBAG7BP,WAIAQ,oBAIAX,WAIAY,oBAIAC,cACClB,KAAKQ,UACLR,KAAKgB,mBAGNG,SACCpC,SAAS6B,MAAQZ,KAAKY,MACtBZ,KAAKD,QAAQqB,mBAAmB,YAAapB,KAAKa,gBAClDb,KAAKU,QAAUV,KAAKD,QAAQgB,iBAG7BM,SACCrB,KAAKD,QAAQuB,kBAAkBD,SAShCd,MAAMgB,EAAYC,GACjB,WAAWrB,QAASC,IACnBJ,KAAKQ,UAELe,EAAWhB,MAAM,CAAEiB,QAAAA,EAASC,GAAIzB,KAAKU,UACnCgB,KAAK,KACL1B,KAAKgB,mBACLZ,QAYJH,MAAMsB,EAAYC,EAASG,GAC1B,WAAWxB,QAASC,IACnBJ,KAAKK,UAELkB,EAAWtB,MAAM,CAAEuB,QAAAA,EAASI,KAAM5B,KAAKU,UACrCgB,KAAK,KACDC,GACH3B,KAAKqB,SAGNrB,KAAKiB,mBACLb,eCjFgByB,qBAIpBC,KAAO,IAAIC,SAKXC,WAAa,IAAID,IAQjBE,IAAIC,EAAaC,EAAWZ,GACtBvB,KAAK8B,KAAKM,IAAIF,KAClBlC,KAAK8B,KAAKO,IAAIH,EAAa,IAAIH,KAC/B/B,KAAKgC,WAAWK,IAAIH,EAAa,IAAII,OAAQ,IAAGJ,QAGjDlC,KAAK8B,KAAKS,IAAIL,GAAaG,IAAIF,EAAWZ,GAC1CvB,KAAKgC,WAAWK,IAAIF,EAAW,IAAIG,OAAQ,IAAGH,OAS/CK,UAAUC,EAAYC,GAErB,IAAK,MAAOR,EAAaS,UAA0Bb,KAElD,GAAIW,EAAWlE,SAASqE,MAAM5C,KAAKgC,WAAWO,IAAIL,IAAe,CAEhE,IAAK,MAAOC,EAAWZ,KAAeoB,EAErC,GAAID,EAAQnE,SAASqE,MAAM5C,KAAKgC,WAAWO,IAAIJ,IAC9C,OAAOZ,EAIT,MAIF,aC5CF,MAAMsB,EAAc,8CAYCC,EAuBpBhD,YAAYiD,EAAa,SAtBzBC,iBAAkB,OAKlBC,kBAAoB,UAKpBC,MAAQ,IAAInB,SAgSZoB,QAAWC,IACV,IAAMA,EAAEC,UAAWD,EAAEE,QAAU,CAC9B,MAAMC,EAAS5F,EAAWyF,EAAEI,cAAc9E,MAG1C,GAFAsB,KAAKyD,gBAAkB9F,EAAWI,OAAOC,SAASU,MAE9CsB,KAAKyD,gBAAgBjF,OAAS+E,EAAO/E,KACxC,OAID,GAAIwB,KAAKyD,gBAAgB/E,OAAS6E,EAAO7E,MAASsB,KAAKyD,gBAAgBnF,UAAYiF,EAAOjF,QAIzF,OAHA8E,EAAEM,sBAEF1D,KAAK2D,WAAWJ,EAAO9E,IAAK2E,EAAEI,cAAcI,QAAQrC,aAAc,EAAO6B,EAAEI,eAAeK,MAAMC,GAAOC,QAAQC,KAAKF,IAKhH9D,KAAKyD,gBAAgBnF,SAAYiF,EAAOjF,SAC5C8E,EAAEM,wBASLO,WAAa,MAERlG,OAAOC,SAASO,WAAayB,KAAKyD,gBAAgBlF,WAAayB,KAAKkE,aAInElE,KAAKmE,oBAAsBnE,KAAKgD,kBAAmBhD,KAAKkE,WAOxDlE,KAAKkE,YACTlE,KAAKoE,UAAYrG,OAAOC,SAASU,MAGlCsB,KAAKkE,WAAY,OAGjBlE,KAAK2D,WAAW5F,OAAOC,SAASU,MAAM,EAAO,cAZ5CX,OAAOsG,QAAQC,UAAU,GAAI,GAAItE,KAAKoE,WACtCL,QAAQC,KAAKnB,QAxTd,MAAM0B,MACLA,EAAQ,2DADH5C,iBAELA,GAAmB,EAFdwC,kBAGLA,GAAoB,EAHfK,UAILA,EAAY,CACXC,QAAShE,GALLiE,YAOLA,EAAc,CACbD,QAAS5E,GARL8E,eAULA,EAAkBC,CAAAA,QAA2CC,IAA/BD,EAAQhB,QAAQkB,aAC3C/B,EAEJ/C,KAAKwE,UAAYA,EACjBxE,KAAK0E,YAAcA,EACnB1E,KAAK+E,gBAAkB/E,KAAKwE,UAAUC,SAAWhE,EACjDT,KAAKgF,kBAAoBhF,KAAK0E,YAAYD,SAAW5E,EACrDG,KAAKD,QAAUhB,SAASkG,cAAc,eACtCjF,KAAK2E,eAAiBA,EACtB3E,KAAK2B,iBAAmBA,EACxB3B,KAAKmE,kBAAoBA,EACzBnE,KAAKkD,MAAQ,IAAInB,IACjB/B,KAAKkE,WAAY,EAGjBlE,KAAKkF,aAAaX,GAElBvE,KAAKyD,gBAAkB9F,EAAWI,OAAOC,SAASU,MAGlDsB,KAAKkD,MAAMb,IAAIrC,KAAKyD,gBAAgB/E,KAAMsB,KAAKmF,iBAAiBpG,SAASqG,WAAU,KAGnFpF,KAAKiD,kBAAoBjD,KAAKkD,MAAMX,IAAIvC,KAAKyD,gBAAgB/E,MAC7DsB,KAAKiD,kBAAkBoC,SAASnE,cAMjCoE,mBAAmBD,GAClBrF,KAAK+E,gBAAkB/E,KAAKwE,UAAUa,GAMvCE,qBAAqBhE,GACpBvB,KAAKgF,kBAAoBhF,KAAK0E,YAAYnD,GAU3CiE,SAAStD,EAAaC,EAAWZ,GAC3BvB,KAAKyF,SACTzF,KAAKyF,OAAS,IAAI5D,GAGnB7B,KAAKyF,OAAOxD,IAAIC,EAAaC,EAAWZ,GASzCmE,QAAQ9H,cAIP,OAFAA,EAAMD,EAAWC,GAAKc,KAEjBsB,KAAKkD,MAAMd,IAAIxE,GAObuC,QAAQC,eANFuF,MAAM/H,GAChB8D,KAAKkE,eAAOC,GACZC,EAAK5C,MAAMb,IAAIzE,EAAKkI,EAAKX,iBAAiBU,MAW9CE,cACC,MAAMC,EAAMrI,EAAWI,OAAOC,SAASU,MAAMA,KAEzCsB,KAAKkD,MAAMd,IAAI4D,KAClBhG,KAAKkD,MAAM+C,OAAOD,GAClBhG,KAAKkD,MAAMb,IAAI2D,EAAKhG,KAAKmF,iBAAiBpG,SAASqG,WAAU,MAU/Dc,WAAWtI,GACV,MAAMoI,EAAMrI,EAAWC,GAAOG,OAAOC,SAASU,MAAMA,KAEhDsB,KAAKkD,MAAMd,IAAI4D,IAClBhG,KAAKkD,MAAM+C,OAAOD,GAUpBrC,WAAW/F,EAAK2D,GAAa,EAAOC,GAAU,cAC7C,WAAWrB,QAAQ,CAACC,EAAS+F,KAE5B,IAAKnG,KAAKmE,mBAAqBnE,KAAKgD,gBAEnC,YADAmD,EAAO,IAAIC,MAAMvD,IAIlB7C,KAAKgD,iBAAkB,EAEvBhD,KAAKqG,eAAiB1I,EAAWC,GAEjC,MAAM0I,EAAkB,IAAKtG,KAAKuG,iBAAiBhF,GAA3B,CAAwC,CAAExB,QAASC,KAAKD,UAEhFC,KAAKwG,YAAYxG,KAAKqG,eAAgBC,EAAiB9E,GACrDE,KAAKkE,iBACL,OAAIa,EAAKvD,MAAMd,IAAIqE,EAAKJ,eAAe3H,YACzB+H,EAAKC,WAAWD,EAAKJ,eAAgBC,EAAiBG,EAAKvD,MAAMX,IAAIkE,EAAKJ,eAAe3H,MAAO8C,GAEtGiF,EAAKd,MAAMc,EAAKJ,eAAe5H,KAAKiD,KAAKkE,eAAOC,GACtD,aAAaY,EAAKC,WAAWD,EAAKJ,eAAgBC,EAAiBG,EAAKtB,iBAAiBU,GAAUrE,OAIrGE,KAAK,KACLtB,QAUJuG,GAAGC,EAAOC,GACTC,EAAEH,GAAGC,EAAOC,GAQbE,IAAIH,EAAOC,GACVC,EAAEC,IAAIH,EAAOC,GAUdL,YAAY5I,EAAK0I,EAAiB9E,GAMjC,OALAsF,EAAEE,KAAK,eAAgB,CACtBpF,KAAM5B,KAAKiD,kBACXzB,QAAAA,QAGUrB,QAASC,IACnBJ,KAAKiD,kBAAkBoC,SAASpF,MAAMqG,EAAiB9E,EAASxB,KAAK2B,kBACnED,KAAK,KACW,aAAZF,GACHzD,OAAOsG,QAAQC,UAAU,GAAI,GAAI1G,EAAIa,KAGtC2B,QAaJsG,WAAW9I,EAAK0I,EAAiBW,EAAOzF,GAQvC,OANKxB,KAAKkD,MAAMd,IAAIxE,EAAIc,OACvBsB,KAAKkD,MAAMb,IAAIzE,EAAIc,KAAMuI,GAG1BjH,KAAKyD,gBAAkB7F,MAEZuC,QAASC,IACnB6G,EAAM5B,SAASlE,SAEf2F,EAAEE,KAAK,cAAe,CACrBpF,KAAM5B,KAAKiD,kBACXxB,GAAIwF,EACJzF,QAAAA,IAGGxB,KAAK2E,gBACR3E,KAAKkH,YAAYD,EAAME,SAGxBF,EAAM5B,SAAS9E,MAAM+F,EAAiB9E,GACpCE,KAAK,KACLoF,EAAEE,KAAK,eAAgB,CACtBpF,KAAM5B,KAAKiD,kBACXxB,GAAIwF,EACJzF,QAAAA,IAGDxB,KAAKiD,kBAAoBgE,EACzBjH,KAAKgD,iBAAkB,EACvBhD,KAAKkE,WAAY,EACjB9D,QAUJ8G,YAAYE,GACX,MAAMC,EAAa,IAAID,GACjBE,EAAiB,IAAIvI,SAASwI,iBAAiB,WAAWC,OAAOxH,KAAK2E,gBAG5E,IAAK,IAAI8C,EAAI,EAAGA,EAAIH,EAAelJ,OAAQqJ,IAC1C,IAAK,IAAIC,EAAI,EAAGA,EAAIL,EAAWjJ,OAAQsJ,IACtC,GAAIJ,EAAeG,GAAG3G,YAAcuG,EAAWK,GAAG5G,UAAW,EJ9PpClC,EI+PX0I,EAAeG,IJ9P3B5I,WAAW8I,aAAazI,EAAgBN,GAAOA,GI+PhDyI,EAAWO,OAAOF,EAAG,GACrB,UJjQwB9I,EIsQ3B,IAAK,MAAMiJ,KAAUR,EACpB1I,EAAakJ,GAQf3C,aAAaX,GACZuC,EAAEgB,SAAS,QAASvD,EAAOvE,KAAKmD,SAChC2D,EAAEH,GAAG,WAAY5I,OAAQiC,KAAKiE,YA+D/B0B,MAAM/H,GACL,WAAWuC,QAASC,IACnBuF,MAAM/H,EAAK,CACVmK,KAAM,cACNC,OAAQ,MACRC,QAAS,CAAE,mBAAoB,QAC/BC,YAAa,gBAEZxG,KAAMyG,IACDA,EAASC,KACbrE,QAAQC,KAAK,+CACbjG,OAAOC,SAASU,KAAOd,GAGjBuK,EAASE,SAEhB3G,KAAM4G,QJ9XcC,EI+XpBnI,EJ9XmB,iBADCmI,EI+XHD,GJ9Xa7K,EAAO+K,gBAAgBD,EAAM,aAAeA,KIgY1E1E,MAAOC,IACPC,QAAQC,KAAKF,GACb/F,OAAOC,SAASU,KAAOd,MAU3B2I,iBAAiBhF,SAChB,GAAIA,EACH,YAAYmD,YAAYnD,GAGzB,MAAMkH,WAAkBzI,KAAKyF,eAALiD,EAAalG,UAAUxC,KAAKyD,gBAAiBzD,KAAKqG,gBAE1E,OAAIoC,OACS/D,YAAY+D,QAGbzD,kBAQbG,iBAAiBxE,GAChB,MAAMD,EAAUC,EAAKsE,cAAc,oBAC7BxE,EAAWC,EAAQkD,QAAQ+E,SAASvK,OAAS4B,KAAKwE,UAAU9D,EAAQkD,QAAQ+E,UAAY3I,KAAK+E,gBAEnG,MAAO,CACNpE,KAAAA,EACAD,QAAAA,EACAyG,QAASnH,KAAK2E,eAAiB,IAAIhE,EAAK4G,iBAAiB,WAAWC,OAAOxH,KAAK2E,gBAAkB,GAClG/D,MAAOD,EAAKC,MACZyE,SAAU,IAAI5E,EAAS,CACtBV,QAASC,KAAKD,QACda,MAAOD,EAAKC,MACZF,QAAAA,EACAC,KAAAA"}