{"version":3,"file":"taxi.modern.js","sources":["../src/helpers.js","../src/Transition.js","../src/Renderer.js","../src/RouteStore.js","../src/Core.js"],"sourcesContent":["const parser = new DOMParser()\r\n\r\n/**\r\n * Parse a HTML string into a proper Document.\r\n * @param {string|Document} html\r\n * @return {Document|*}\r\n */\r\nexport function parseDom(html) {\r\n\treturn typeof html === 'string' ? parser.parseFromString(html, 'text/html') : html\r\n}\r\n\r\n/**\r\n * Extract details from a given URL string. Assumed to be on the current TLD.\r\n * @param {string} url\r\n * @return {{raw: string, href: string, host: string, hasHash: boolean, pathname: string}}\r\n */\r\nexport function processUrl(url) {\r\n\tconst details = new URL(url, window.location.origin)\r\n\tlet normalized = null\r\n\r\n\tif (details.hash.length) {\r\n\t\tnormalized = url.replace(details.hash, '')\r\n\t}\r\n\r\n\treturn {\r\n\t\thasHash: details.hash.length > 0,\r\n\t\tpathname: details.pathname,\r\n\t\thost: details.host,\r\n\t\traw: url,\r\n\t\thref: normalized || details.href\r\n\t}\r\n}\r\n\r\n/**\r\n * Reloads a provided script/stylesheet by replacing with itself.\r\n * @param {HTMLElement} node\r\n */\r\nexport function reloadScript(node) {\r\n\tnode.parentNode.replaceChild(duplicateScript(node), node)\r\n}\r\n\r\n/**\r\n * Loads a provided script/stylesheet by appending a clone to the current document.\r\n * @param {HTMLElement} node\r\n */\r\nexport function appendScript(node) {\r\n\tif (node.parentNode.tagName === 'HEAD') {\r\n\t\tdocument.head.appendChild(duplicateScript(node))\r\n\t} else {\r\n\t\tdocument.body.appendChild(duplicateScript(node))\r\n\t}\r\n}\r\n\r\n/**\r\n * Creates a clone of a given HTMLElement\r\n * @param {HTMLElement} node\r\n * @return {HTMLElement}\r\n */\r\nexport function duplicateScript(node) {\r\n\tconst replacement = document.createElement('SCRIPT')\r\n\r\n\t// Loop Over Attributes\r\n\tfor (let k = 0; k < node.attributes.length; k++) {\r\n\t\t// Get Attribute\r\n\t\tconst attr = node.attributes[k]\r\n\r\n\t\t// Set Attribute\r\n\t\treplacement.setAttribute(attr.nodeName, attr.nodeValue)\r\n\t}\r\n\r\n\t// Inline Script\r\n\tif (node.innerHTML) {\r\n\t\treplacement.innerHTML = node.innerHTML\r\n\t}\r\n\r\n\treturn replacement\r\n}\r\n","export default class Transition {\r\n\t/**\r\n\t * @param {{wrapper: HTMLElement}} props\r\n\t */\r\n\tconstructor({ wrapper }) {\r\n\t\tthis.wrapper = wrapper\r\n\t}\r\n\r\n\t/**\r\n\t * @param {{ from: HTMLElement|Element, trigger: string|HTMLElement|false }} props\r\n\t * @return {Promise<void>}\r\n\t */\r\n\tleave(props) {\r\n\t\treturn new Promise((resolve) => {\r\n\t\t\tthis.onLeave({ ...props, done: resolve })\r\n\t\t})\r\n\t}\r\n\r\n\t/**\r\n\t * @param {{ to: HTMLElement|Element, trigger: string|HTMLElement|false }} props\r\n\t * @return {Promise<void>}\r\n\t */\r\n\tenter(props) {\r\n\t\treturn new Promise((resolve) => {\r\n\t\t\tthis.onEnter({ ...props, done: resolve })\r\n\t\t})\r\n\t}\r\n\r\n\t/**\r\n\t * Handle the transition leaving the previous page.\r\n\t * @param {{from: HTMLElement|Element, trigger: string|HTMLElement|false, done: function}} props\r\n\t */\r\n\tonLeave({ from, trigger, done }) {\r\n\t\tdone()\r\n\t}\r\n\r\n\t/**\r\n\t * Handle the transition entering the next page.\r\n\t * @param {{to: HTMLElement|Element, trigger: string|HTMLElement|false, done: function}} props\r\n\t */\r\n\tonEnter({ to, trigger, done }) {\r\n\t\tdone()\r\n\t}\r\n}\r\n","import Transition from \"./Transition\"\r\n\r\nexport default class Renderer {\r\n\t/**\r\n\t * @param {{content: HTMLElement|Element, page: Document|Node, title: string, wrapper: Element}} props\r\n\t */\r\n\tconstructor({ content, page, title, wrapper }) {\r\n\t\tthis._contentString = content.outerHTML\r\n\t\tthis._DOM = null\r\n\t\tthis.page = page\r\n\t\tthis.title = title\r\n\t\tthis.wrapper = wrapper\r\n\t\tthis.content = this.wrapper.lastElementChild\r\n\t}\r\n\r\n\tonEnter() {\r\n\r\n\t}\r\n\r\n\tonEnterCompleted() {\r\n\r\n\t}\r\n\r\n\tonLeave() {\r\n\r\n\t}\r\n\r\n\tonLeaveCompleted() {\r\n\r\n\t}\r\n\r\n\tinitialLoad() {\r\n\t\tthis.onEnter()\r\n\t\tthis.onEnterCompleted()\r\n\t}\r\n\r\n\tupdate() {\r\n\t\tdocument.title = this.title\r\n\t\tthis.wrapper.appendChild(this._DOM.firstElementChild)\r\n\t\tthis.content = this.wrapper.lastElementChild\r\n\t\tthis._DOM = null\r\n\t}\r\n\r\n\tcreateDom() {\r\n\t\tif (!this._DOM) {\r\n\t\t\tthis._DOM = document.createElement('div')\r\n\t\t\tthis._DOM.innerHTML = this._contentString\r\n\t\t}\r\n\t}\r\n\r\n\tremove() {\r\n\t\tthis.wrapper.firstElementChild.remove()\r\n\t}\r\n\r\n\t/**\r\n\t * Called when transitioning into the current page.\r\n\t * @param {Transition} transition\r\n\t * @param {string|HTMLElement|false} trigger\r\n\t * @return {Promise<null>}\r\n\t */\r\n\tenter(transition, trigger) {\r\n\t\treturn new Promise((resolve) => {\r\n\t\t\tthis.onEnter()\r\n\r\n\t\t\ttransition.enter({ trigger, to: this.content })\r\n\t\t\t\t.then(() => {\r\n\t\t\t\t\tthis.onEnterCompleted()\r\n\t\t\t\t\tresolve()\r\n\t\t\t\t})\r\n\t\t})\r\n\t}\r\n\r\n\t/**\r\n\t * Called when transitioning away from the current page.\r\n\t * @param {Transition} transition\r\n\t * @param {string|HTMLElement|false} trigger\r\n\t * @param {boolean} removeOldContent\r\n\t * @return {Promise<null>}\r\n\t */\r\n\tleave(transition, trigger, removeOldContent) {\r\n\t\treturn new Promise((resolve) => {\r\n\t\t\tthis.onLeave()\r\n\r\n\t\t\ttransition.leave({ trigger, from: this.content })\r\n\t\t\t\t.then(() => {\r\n\t\t\t\t\tif (removeOldContent) {\r\n\t\t\t\t\t\tthis.remove()\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis.onLeaveCompleted()\r\n\t\t\t\t\tresolve()\r\n\t\t\t\t})\r\n\t\t})\r\n\t}\r\n}\r\n","export default class RouteStore {\r\n\t/**\r\n\t * @type {Map<string, Map<string, string>>}\r\n\t */\r\n\tdata = new Map()\r\n\r\n\t/**\r\n\t * @type {Map<string, RegExp>}\r\n\t */\r\n\tregexCache = new Map()\r\n\r\n\t/**\r\n\t *\r\n\t * @param {string} fromPattern\r\n\t * @param {string} toPattern\r\n\t * @param {string} transition\r\n\t */\r\n\tadd(fromPattern, toPattern, transition) {\r\n\t\tif (!this.data.has(fromPattern)) {\r\n\t\t\tthis.data.set(fromPattern, new Map())\r\n\t\t\tthis.regexCache.set(fromPattern, new RegExp(`^${fromPattern}$`))\r\n\t\t}\r\n\r\n\t\tthis.data.get(fromPattern).set(toPattern, transition)\r\n\t\tthis.regexCache.set(toPattern, new RegExp(`^${toPattern}$`))\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param {{ raw: string, href: string, hasHash: boolean, pathname: string }} currentUrl\r\n\t * @param {{ raw: string, href: string, hasHash: boolean, pathname: string }} nextUrl\r\n\t * @return {string|null}\r\n\t */\r\n\tfindMatch(currentUrl, nextUrl) {\r\n\t\t// Loop through all from patterns\r\n\t\tfor (const [fromPattern, potentialMatches] of this.data) {\r\n\t\t\t// If we have a match\r\n\t\t\tif (currentUrl.pathname.match(this.regexCache.get(fromPattern))) {\r\n\t\t\t\t// loop through all associated to patterns\r\n\t\t\t\tfor (const [toPattern, transition] of potentialMatches) {\r\n\t\t\t\t\t// If we find a match, return it\r\n\t\t\t\t\tif (nextUrl.pathname.match(this.regexCache.get(toPattern))) {\r\n\t\t\t\t\t\treturn transition\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbreak\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn null\r\n\t}\r\n}\r\n","import E from '@unseenco/e'\nimport { appendScript, parseDom, processUrl, reloadScript } from './helpers'\nimport Transition from './Transition'\nimport Renderer from './Renderer'\nimport RouteStore from './RouteStore'\n\nconst IN_PROGRESS = 'A transition is currently in progress'\n\n/**\n * @typedef CacheEntry\n * @type {object}\n * @property {typeof Renderer|Renderer} renderer\n * @property {Document|Node} page\n * @property {array} scripts\n * @property {boolean} skipCache\n * @property {string} title\n * @property {HTMLElement|Element} content\n */\n\nexport default class Core {\n\tisTransitioning = false\n\n\t/**\n\t * @type {CacheEntry|null}\n\t */\n\tcurrentCacheEntry = null\n\n\t/**\n\t * @type {Map<string, CacheEntry>}\n\t */\n\tcache = new Map()\n\n\t/**\n\t * @private\n\t * @type {Map<string, Promise>}\n\t */\n\tactivePromises = new Map()\n\n\t/**\n\t * @param {{\n\t * \t\tlinks?: string,\n\t * \t\tremoveOldContent?: boolean,\n\t * \t\tallowInterruption?: boolean,\n\t * \t\tbypassCache?: boolean,\n\t * \t\tenablePrefetch?: boolean,\n\t * \t\trenderers?: Object.<string, typeof Renderer>,\n\t * \t\ttransitions?: Object.<string, typeof Transition>,\n\t * \t\treloadJsFilter?: boolean|function(HTMLElement): boolean\n\t * }} parameters\n\t */\n\tconstructor(parameters = {}) {\n\t\tconst {\n\t\t\tlinks = 'a:not([target]):not([href^=\\\\#]):not([data-taxi-ignore])',\n\t\t\tremoveOldContent = true,\n\t\t\tallowInterruption = false,\n\t\t\tbypassCache = false,\n\t\t\tenablePrefetch = true,\n\t\t\trenderers = {\n\t\t\t\tdefault: Renderer\n\t\t\t},\n\t\t\ttransitions = {\n\t\t\t\tdefault: Transition\n\t\t\t},\n\t\t\treloadJsFilter = (element) => element.dataset.taxiReload !== undefined\n\t\t} = parameters\n\n\t\tthis.renderers = renderers\n\t\tthis.transitions = transitions\n\t\tthis.defaultRenderer = this.renderers.default || Renderer\n\t\tthis.defaultTransition = this.transitions.default || Transition\n\t\tthis.wrapper = document.querySelector('[data-taxi]')\n\t\tthis.reloadJsFilter = reloadJsFilter\n\t\tthis.removeOldContent = removeOldContent\n\t\tthis.allowInterruption = allowInterruption\n\t\tthis.bypassCache = bypassCache\n\t\tthis.enablePrefetch = enablePrefetch\n\t\tthis.cache = new Map()\n\t\tthis.isPopping = false\n\n\t\t// Add delegated link events\n\t\tthis.attachEvents(links)\n\n\t\tthis.currentLocation = processUrl(window.location.href)\n\n\t\t// as this is the initial page load, prime this page into the cache\n\t\tthis.cache.set(this.currentLocation.href, this.createCacheEntry(document.cloneNode(true)))\n\n\t\t// fire the current Renderer enter methods\n\t\tthis.currentCacheEntry = this.cache.get(this.currentLocation.href)\n\t\tthis.currentCacheEntry.renderer.initialLoad()\n\t}\n\n\t/**\n\t * @param {string} renderer\n\t */\n\tsetDefaultRenderer(renderer) {\n\t\tthis.defaultRenderer = this.renderers[renderer]\n\t}\n\n\t/**\n\t * @param {string} transition\n\t */\n\tsetDefaultTransition(transition) {\n\t\tthis.defaultTransition = this.transitions[transition]\n\t}\n\n\t/**\n\t * Registers a route into the RouteStore\n\t *\n\t * @param {string} fromPattern\n\t * @param {string} toPattern\n\t * @param {string} transition\n\t */\n\taddRoute(fromPattern, toPattern, transition) {\n\t\tif (!this.router) {\n\t\t\tthis.router = new RouteStore()\n\t\t}\n\n\t\tthis.router.add(fromPattern, toPattern, transition)\n\t}\n\n\t/**\n\t * Prime the cache for a given URL\n\t *\n\t * @param {string} url\n\t * @param {boolean} [preloadAssets]\n\t * @return {Promise}\n\t */\n\tpreload(url, preloadAssets = false) {\n\t\t// convert relative URLs to absolute\n\t\turl = processUrl(url).href\n\n\t\tif (!this.cache.has(url)) {\n\t\t\treturn this.fetch(url, false)\n\t\t\t\t.then(async (newPage) => {\n\t\t\t\t\tthis.cache.set(url, this.createCacheEntry(newPage))\n\n\t\t\t\t\tif (preloadAssets) {\n\t\t\t\t\t\tthis.cache.get(url).renderer.createDom()\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t}\n\n\t\treturn Promise.resolve()\n\t}\n\n\t/**\n\t * Updates the HTML cache for a given URL.\n\t * If no URL is passed, then cache for the current page is updated.\n\t * Useful when adding/removing content via AJAX such as a search page or infinite loader.\n\t *\n\t * @param {string} [url]\n\t */\n\tupdateCache(url) {\n\t\tconst key = processUrl(url || window.location.href).href\n\n\t\tif (this.cache.has(key)) {\n\t\t\tthis.cache.delete(key)\n\t\t}\n\n\t\tthis.cache.set(key, this.createCacheEntry(document.cloneNode(true)))\n\t}\n\n\t/**\n\t * Clears the cache for a given URL.\n\t * If no URL is passed, then cache for the current page is cleared.\n\t *\n\t * @param {string} [url]\n\t */\n\tclearCache(url) {\n\t\tconst key = processUrl(url || window.location.href).href\n\n\t\tif (this.cache.has(key)) {\n\t\t\tthis.cache.delete(key)\n\t\t}\n\t}\n\n\t/**\n\t * @param {string} url\n\t * @param {string|false} [transition]\n\t * @param {string|false|HTMLElement} [trigger]\n\t * @return {Promise<void|Error>}\n\t */\n\tnavigateTo(url, transition = false, trigger = false) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\t// Don't allow multiple navigations to occur at once\n\t\t\tif (!this.allowInterruption && this.isTransitioning) {\n\t\t\t\treject(new Error(IN_PROGRESS))\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tthis.isTransitioning = true\n\t\t\tthis.isPopping = true\n\t\t\tthis.targetLocation = processUrl(url)\n\t\t\tthis.popTarget = window.location.href\n\n\t\t\tconst TransitionClass = new (this.chooseTransition(transition))({ wrapper: this.wrapper })\n\n\t\t\tlet navigationPromise\n\n\t\t\tif (this.bypassCache || !this.cache.has(this.targetLocation.href) || this.cache.get(this.targetLocation.href).skipCache) {\n\t\t\t\tconst fetched = this.fetch(this.targetLocation.href)\n\t\t\t\t\t.then((newPage) => {\n\t\t\t\t\t\tthis.cache.set(this.targetLocation.href, this.createCacheEntry(newPage))\n\t\t\t\t\t\tthis.cache.get(this.targetLocation.href).renderer.createDom()\n\t\t\t\t\t})\n\n\t\t\t\tnavigationPromise = this.beforeFetch(this.targetLocation, TransitionClass, trigger)\n\t\t\t\t\t.then(async () => {\n\t\t\t\t\t\treturn fetched.then(async () => {\n\t\t\t\t\t\t\treturn await this.afterFetch(this.targetLocation, TransitionClass, this.cache.get(this.targetLocation.href), trigger)\n\t\t\t\t\t\t})\n\t\t\t\t\t})\n\t\t\t} else {\n\t\t\t\tthis.cache.get(this.targetLocation.href).renderer.createDom()\n\n\t\t\t\tnavigationPromise = this.beforeFetch(this.targetLocation, TransitionClass, trigger)\n\t\t\t\t\t.then(async () => {\n\t\t\t\t\t\treturn await this.afterFetch(this.targetLocation, TransitionClass, this.cache.get(this.targetLocation.href), trigger)\n\t\t\t\t\t})\n\t\t\t}\n\n\t\t\tnavigationPromise.then(() => {\n\t\t\t\tresolve()\n\t\t\t})\n\t\t})\n\t}\n\n\t/**\n\t * Add an event listener.\n\t * @param {string} event\n\t * @param {any} callback\n\t */\n\ton(event, callback) {\n\t\tE.on(event, callback)\n\t}\n\n\t/**\n\t * Remove an event listener.\n\t * @param {string} event\n\t * @param {any} [callback]\n\t */\n\toff(event, callback) {\n\t\tE.off(event, callback)\n\t}\n\n\t/**\n\t * @private\n\t * @param {{ raw: string, href: string, hasHash: boolean, pathname: string }} url\n\t * @param {Transition} TransitionClass\n\t * @param {string|HTMLElement|false} trigger\n\t * @return {Promise<void>}\n\t */\n\tbeforeFetch(url, TransitionClass, trigger) {\n\t\tE.emit('NAVIGATE_OUT', {\n\t\t\tfrom: this.currentCacheEntry,\n\t\t\ttrigger\n\t\t})\n\n\t\treturn new Promise((resolve) => {\n\t\t\tthis.currentCacheEntry.renderer.leave(TransitionClass, trigger, this.removeOldContent)\n\t\t\t\t.then(() => {\n\t\t\t\t\tif (trigger !== 'popstate') {\n\t\t\t\t\t\twindow.history.pushState({}, '', url.raw)\n\t\t\t\t\t}\n\n\t\t\t\t\tresolve()\n\t\t\t\t})\n\t\t})\n\t}\n\n\t/**\n\t * @private\n\t * @param {{ raw: string, href: string, host: string, hasHash: boolean, pathname: string }} url\n\t * @param {Transition} TransitionClass\n\t * @param {CacheEntry} entry\n\t * @param {string|HTMLElement|false} trigger\n\t * @return {Promise<void>}\n\t */\n\tafterFetch(url, TransitionClass, entry, trigger) {\n\t\tthis.currentLocation = url\n\t\tthis.popTarget = this.currentLocation.href\n\n\t\treturn new Promise((resolve) => {\n\t\t\tentry.renderer.update()\n\n\t\t\tE.emit('NAVIGATE_IN', {\n\t\t\t\tfrom: this.currentCacheEntry,\n\t\t\t\tto: entry,\n\t\t\t\ttrigger\n\t\t\t})\n\n\t\t\tif (this.reloadJsFilter) {\n\t\t\t\tthis.loadScripts(entry.scripts)\n\t\t\t}\n\n\t\t\tentry.renderer.enter(TransitionClass, trigger)\n\t\t\t\t.then(() => {\n\t\t\t\t\tE.emit('NAVIGATE_END', {\n\t\t\t\t\t\tfrom: this.currentCacheEntry,\n\t\t\t\t\t\tto: entry,\n\t\t\t\t\t\ttrigger\n\t\t\t\t\t})\n\n\t\t\t\t\tthis.currentCacheEntry = entry\n\t\t\t\t\tthis.isTransitioning = false\n\t\t\t\t\tthis.isPopping = false\n\t\t\t\t\tresolve()\n\t\t\t\t})\n\t\t})\n\t}\n\n\t/**\n\t * Load up scripts from the target page if needed\n\t *\n\t * @param {HTMLElement[]} cachedScripts\n\t */\n\tloadScripts(cachedScripts) {\n\t\tconst newScripts = [...cachedScripts]\n\t\tconst currentScripts = Array.from(document.querySelectorAll('script')).filter(this.reloadJsFilter)\n\n\t\t// loop through all new scripts\n\t\tfor (let i = 0; i < currentScripts.length; i++) {\n\t\t\tfor (let n = 0; n < newScripts.length; n++) {\n\t\t\t\tif (currentScripts[i].outerHTML === newScripts[n].outerHTML) {\n\t\t\t\t\treloadScript(currentScripts[i])\n\t\t\t\t\tnewScripts.splice(n, 1)\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (const script of newScripts) {\n\t\t\tappendScript(script)\n\t\t}\n\t}\n\n\t/**\n\t * @private\n\t * @param {string} links\n\t */\n\tattachEvents(links) {\n\t\tE.delegate('click', links, this.onClick)\n\t\tE.on('popstate', window, this.onPopstate)\n\n\t\tif (this.enablePrefetch) {\n\t\t\tE.delegate('mouseenter focus', links, this.onPrefetch)\n\t\t}\n\t}\n\n\t/**\n\t * @private\n\t * @param {MouseEvent} e\n\t */\n\tonClick = (e) => {\n\t\tif (!(e.metaKey || e.ctrlKey)) {\n\t\t\tconst target = processUrl(e.currentTarget.href)\n\t\t\tthis.currentLocation = processUrl(window.location.href)\n\n\t\t\tif (this.currentLocation.host !== target.host) {\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\t// the target is a new URL, or is removing the hash from the current URL\n\t\t\tif (this.currentLocation.href !== target.href || (this.currentLocation.hasHash && !target.hasHash)) {\n\t\t\t\te.preventDefault()\n\t\t\t\t// noinspection JSIgnoredPromiseFromCall\n\t\t\t\tthis.navigateTo(target.raw, e.currentTarget.dataset.transition || false, e.currentTarget).catch(err => console.warn(err))\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\t// a click to the current URL was detected\n\t\t\tif (!this.currentLocation.hasHash && !target.hasHash) {\n\t\t\t\te.preventDefault()\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @private\n\t * @return {void|boolean}\n\t */\n\tonPopstate = () => {\n\t\t// don't trigger for on-page anchors\n\t\tif (window.location.pathname === this.currentLocation.pathname && !this.isPopping) {\n\t\t\treturn false\n\t\t}\n\n\t\tif (!this.allowInterruption && (this.isTransitioning || this.isPopping)) {\n\t\t\t// overwrite history state with current page if currently navigating\n\t\t\twindow.history.pushState({}, '', this.popTarget)\n\t\t\tconsole.warn(IN_PROGRESS)\n\t\t\treturn false\n\t\t}\n\n\t\tif (!this.isPopping) {\n\t\t\tthis.popTarget = window.location.href\n\t\t}\n\n\t\tthis.isPopping = true\n\n\t\t// noinspection JSIgnoredPromiseFromCall\n\t\tthis.navigateTo(window.location.href, false, 'popstate')\n\t}\n\n\t/**\n\t * @private\n\t * @param {MouseEvent} e\n\t */\n\tonPrefetch = (e) => {\n\t\tconst target = processUrl(e.currentTarget.href)\n\n\t\tif (this.currentLocation.host !== target.host) {\n\t\t\treturn\n\t\t}\n\n\t\tthis.preload(e.currentTarget.href, false)\n\t}\n\n\t/**\n\t * @private\n\t * @param {string} url\n\t * @param {boolean} [runFallback]\n\t * @return {Promise<Document>}\n\t */\n\tfetch(url, runFallback = true) {\n\t\t// If Taxi is currently performing a fetch for the given URL, return that instead of starting a new request\n\t\tif (this.activePromises.has(url)) {\n\t\t\treturn this.activePromises.get(url)\n\t\t}\n\n\t\tconst request = new Promise((resolve, reject) => {\n\t\t\tfetch(url, {\n\t\t\t\tmode: 'same-origin',\n\t\t\t\tmethod: 'GET',\n\t\t\t\theaders: { 'X-Requested-With': 'Taxi' },\n\t\t\t\tcredentials: 'same-origin'\n\t\t\t})\n\t\t\t\t.then((response) => {\n\t\t\t\t\tif (!response.ok) {\n\t\t\t\t\t\treject('Taxi encountered a non 2xx HTTP status code')\n\n\t\t\t\t\t\tif (runFallback) {\n\t\t\t\t\t\t\twindow.location.href = url\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn response.text()\n\t\t\t\t})\n\t\t\t\t.then((htmlString) => {\n\t\t\t\t\tresolve(parseDom(htmlString))\n\t\t\t\t})\n\t\t\t\t.catch((err) => {\n\t\t\t\t\treject(err)\n\n\t\t\t\t\tif (runFallback) {\n\t\t\t\t\t\twindow.location.href = url\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.finally(() => {\n\t\t\t\t\tthis.activePromises.delete(url)\n\t\t\t\t})\n\t\t})\n\n\t\tthis.activePromises.set(url, request)\n\n\t\treturn request\n\t}\n\n\t/**\n\t * @private\n\t * @param {string|false} transition\n\t * @return {Transition|function}\n\t */\n\tchooseTransition(transition) {\n\t\tif (transition) {\n\t\t\treturn this.transitions[transition]\n\t\t}\n\n\t\tconst routeTransition = this.router?.findMatch(this.currentLocation, this.targetLocation)\n\n\t\tif (routeTransition) {\n\t\t\treturn this.transitions[routeTransition]\n\t\t}\n\n\t\treturn this.defaultTransition\n\t}\n\n\t/**\n\t * @private\n\t * @param {Document|Node} page\n\t * @return {CacheEntry}\n\t */\n\tcreateCacheEntry(page) {\n\t\tconst content = page.querySelector('[data-taxi-view]')\n\t\tconst Renderer = content.dataset.taxiView.length ? this.renderers[content.dataset.taxiView] : this.defaultRenderer\n\n\t\tif (!Renderer) {\n\t\t\tconsole.warn(`The Renderer \"${content.dataset.taxiView}\" was set in the data-taxi-view of the requested page, but not registered in Taxi.`)\n\t\t}\n\n\t\treturn {\n\t\t\tpage,\n\t\t\tcontent,\n\t\t\tskipCache: content.hasAttribute('data-taxi-nocache'),\n\t\t\tscripts: this.reloadJsFilter ? Array.from(page.querySelectorAll('script')).filter(this.reloadJsFilter) : [],\n\t\t\ttitle: page.title,\n\t\t\trenderer: new Renderer({\n\t\t\t\twrapper: this.wrapper,\n\t\t\t\ttitle: page.title,\n\t\t\t\tcontent,\n\t\t\t\tpage\n\t\t\t})\n\t\t}\n\t}\n}\n"],"names":["parser","DOMParser","processUrl","url","details","URL","window","location","origin","normalized","hash","length","replace","hasHash","pathname","host","raw","href","appendScript","node","parentNode","tagName","document","head","appendChild","duplicateScript","body","replacement","createElement","k","attributes","attr","setAttribute","nodeName","nodeValue","innerHTML","Transition","constructor","wrapper","this","leave","props","Promise","resolve","onLeave","done","enter","onEnter","Renderer","content","page","title","_contentString","outerHTML","_DOM","lastElementChild","onEnterCompleted","onLeaveCompleted","initialLoad","update","firstElementChild","createDom","remove","transition","trigger","to","then","removeOldContent","from","RouteStore","data","Map","regexCache","add","fromPattern","toPattern","has","set","RegExp","get","findMatch","currentUrl","nextUrl","potentialMatches","match","IN_PROGRESS","Core","parameters","isTransitioning","currentCacheEntry","cache","activePromises","onClick","e","metaKey","ctrlKey","target","currentTarget","currentLocation","preventDefault","navigateTo","dataset","catch","err","console","warn","onPopstate","isPopping","allowInterruption","popTarget","history","pushState","onPrefetch","preload","links","bypassCache","enablePrefetch","renderers","default","transitions","reloadJsFilter","element","undefined","taxiReload","defaultRenderer","defaultTransition","querySelector","attachEvents","createCacheEntry","cloneNode","renderer","setDefaultRenderer","setDefaultTransition","addRoute","router","preloadAssets","fetch","async","newPage","_this","updateCache","key","delete","clearCache","reject","Error","targetLocation","TransitionClass","chooseTransition","navigationPromise","skipCache","fetched","beforeFetch","_this2","afterFetch","on","event","callback","E","off","emit","entry","loadScripts","scripts","cachedScripts","newScripts","currentScripts","Array","querySelectorAll","filter","i","n","replaceChild","splice","script","delegate","runFallback","request","mode","method","headers","credentials","response","ok","text","htmlString","html","parseFromString","finally","routeTransition","_this$router","taxiView","hasAttribute"],"mappings":"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"}