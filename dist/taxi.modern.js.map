{"version":3,"file":"taxi.modern.js","sources":["../src/helpers.js","../src/Transition.js","../src/Renderer.js","../src/RouteStore.js","../src/Core.js"],"sourcesContent":["const parser = new DOMParser()\r\n\r\n/**\r\n * Parse a HTML string into a proper Document.\r\n * @param {string|Document} html\r\n * @return {Document|*}\r\n */\r\nexport function parseDom(html) {\r\n\treturn typeof html === 'string' ? parser.parseFromString(html, 'text/html') : html\r\n}\r\n\r\n/**\r\n * Extract details from a given URL string. Assumed to be on the current TLD.\r\n * @param {string} url\r\n * @return {{raw: string, href: string, host: string, hasHash: boolean, pathname: string}}\r\n */\r\nexport function processUrl(url) {\r\n\tconst details = new URL(url, window.location.origin)\r\n\tlet normalized = null\r\n\r\n\tif (details.hash.length) {\r\n\t\tnormalized = url.replace(details.hash, '')\r\n\t}\r\n\r\n\treturn {\r\n\t\thasHash: details.hash.length > 0,\r\n\t\tpathname: details.pathname,\r\n\t\thost: details.host,\r\n\t\traw: url,\r\n\t\thref: normalized || details.href\r\n\t}\r\n}\r\n\r\n/**\r\n * Reloads a provided script/stylesheet by replacing with itself.\r\n * @param {HTMLElement} node\r\n */\r\nexport function reloadScript(node) {\r\n\tnode.parentNode.replaceChild(duplicateScript(node), node)\r\n}\r\n\r\n/**\r\n * Loads a provided script/stylesheet by appending a clone to the current document.\r\n * @param {HTMLElement} node\r\n */\r\nexport function appendScript(node) {\r\n\tif (node.parentNode.tagName === 'HEAD') {\r\n\t\tdocument.head.appendChild(duplicateScript(node))\r\n\t} else {\r\n\t\tdocument.body.appendChild(duplicateScript(node))\r\n\t}\r\n}\r\n\r\n/**\r\n * Creates a clone of a given HTMLElement\r\n * @param {HTMLElement} node\r\n * @return {HTMLElement}\r\n */\r\nexport function duplicateScript(node) {\r\n\tconst replacement = document.createElement('SCRIPT')\r\n\r\n\t// Loop Over Attributes\r\n\tfor (let k = 0; k < node.attributes.length; k++) {\r\n\t\t// Get Attribute\r\n\t\tconst attr = node.attributes[k]\r\n\r\n\t\t// Set Attribute\r\n\t\treplacement.setAttribute(attr.nodeName, attr.nodeValue)\r\n\t}\r\n\r\n\t// Inline Script\r\n\tif (node.innerHTML) {\r\n\t\treplacement.innerHTML = node.innerHTML\r\n\t}\r\n\r\n\treturn replacement\r\n}\r\n","export default class Transition {\r\n\t/**\r\n\t * @param {{wrapper: HTMLElement}} props\r\n\t */\r\n\tconstructor({ wrapper }) {\r\n\t\tthis.wrapper = wrapper\r\n\t}\r\n\r\n\t/**\r\n\t * @param {{ from: HTMLElement|Element, trigger: string|HTMLElement|false }} props\r\n\t * @return {Promise<void>}\r\n\t */\r\n\tleave(props) {\r\n\t\treturn new Promise((resolve) => {\r\n\t\t\tthis.onLeave({ ...props, done: resolve })\r\n\t\t})\r\n\t}\r\n\r\n\t/**\r\n\t * @param {{ to: HTMLElement|Element, trigger: string|HTMLElement|false }} props\r\n\t * @return {Promise<void>}\r\n\t */\r\n\tenter(props) {\r\n\t\treturn new Promise((resolve) => {\r\n\t\t\tthis.onEnter({ ...props, done: resolve })\r\n\t\t})\r\n\t}\r\n\r\n\t/**\r\n\t * Handle the transition leaving the previous page.\r\n\t * @param {{from: HTMLElement|Element, trigger: string|HTMLElement|false, done: function}} props\r\n\t */\r\n\tonLeave({ from, trigger, done }) {\r\n\t\tdone()\r\n\t}\r\n\r\n\t/**\r\n\t * Handle the transition entering the next page.\r\n\t * @param {{to: HTMLElement|Element, trigger: string|HTMLElement|false, done: function}} props\r\n\t */\r\n\tonEnter({ to, trigger, done }) {\r\n\t\tdone()\r\n\t}\r\n}\r\n","import Transition from \"./Transition\"\r\n\r\nexport default class Renderer {\r\n\t/**\r\n\t * @param {{content: HTMLElement|Element, page: Document|Node, title: string, wrapper: Element}} props\r\n\t */\r\n\tconstructor({ content, page, title, wrapper }) {\r\n\t\tthis._contentString = content.outerHTML\r\n\t\tthis._DOM = null\r\n\t\tthis.page = page\r\n\t\tthis.title = title\r\n\t\tthis.wrapper = wrapper\r\n\t\tthis.content = this.wrapper.lastElementChild\r\n\t}\r\n\r\n\tonEnter() {\r\n\r\n\t}\r\n\r\n\tonEnterCompleted() {\r\n\r\n\t}\r\n\r\n\tonLeave() {\r\n\r\n\t}\r\n\r\n\tonLeaveCompleted() {\r\n\r\n\t}\r\n\r\n\tinitialLoad() {\r\n\t\tthis.onEnter()\r\n\t\tthis.onEnterCompleted()\r\n\t}\r\n\r\n\tupdate() {\r\n\t\tdocument.title = this.title\r\n\t\tthis.wrapper.appendChild(this._DOM.firstElementChild)\r\n\t\tthis.content = this.wrapper.lastElementChild\r\n\t\tthis._DOM = null\r\n\t}\r\n\r\n\tcreateDom() {\r\n\t\tif (!this._DOM) {\r\n\t\t\tthis._DOM = document.createElement('div')\r\n\t\t\tthis._DOM.innerHTML = this._contentString\r\n\t\t}\r\n\t}\r\n\r\n\tremove() {\r\n\t\tthis.wrapper.firstElementChild.remove()\r\n\t}\r\n\r\n\t/**\r\n\t * Called when transitioning into the current page.\r\n\t * @param {Transition} transition\r\n\t * @param {string|HTMLElement|false} trigger\r\n\t * @return {Promise<null>}\r\n\t */\r\n\tenter(transition, trigger) {\r\n\t\treturn new Promise((resolve) => {\r\n\t\t\tthis.onEnter()\r\n\r\n\t\t\ttransition.enter({ trigger, to: this.content })\r\n\t\t\t\t.then(() => {\r\n\t\t\t\t\tthis.onEnterCompleted()\r\n\t\t\t\t\tresolve()\r\n\t\t\t\t})\r\n\t\t})\r\n\t}\r\n\r\n\t/**\r\n\t * Called when transitioning away from the current page.\r\n\t * @param {Transition} transition\r\n\t * @param {string|HTMLElement|false} trigger\r\n\t * @param {boolean} removeOldContent\r\n\t * @return {Promise<null>}\r\n\t */\r\n\tleave(transition, trigger, removeOldContent) {\r\n\t\treturn new Promise((resolve) => {\r\n\t\t\tthis.onLeave()\r\n\r\n\t\t\ttransition.leave({ trigger, from: this.content })\r\n\t\t\t\t.then(() => {\r\n\t\t\t\t\tif (removeOldContent) {\r\n\t\t\t\t\t\tthis.remove()\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis.onLeaveCompleted()\r\n\t\t\t\t\tresolve()\r\n\t\t\t\t})\r\n\t\t})\r\n\t}\r\n}\r\n","export default class RouteStore {\r\n\t/**\r\n\t * @type {Map<string, Map<string, string>>}\r\n\t */\r\n\tdata = new Map()\r\n\r\n\t/**\r\n\t * @type {Map<string, RegExp>}\r\n\t */\r\n\tregexCache = new Map()\r\n\r\n\t/**\r\n\t *\r\n\t * @param {string} fromPattern\r\n\t * @param {string} toPattern\r\n\t * @param {string} transition\r\n\t */\r\n\tadd(fromPattern, toPattern, transition) {\r\n\t\tif (!this.data.has(fromPattern)) {\r\n\t\t\tthis.data.set(fromPattern, new Map())\r\n\t\t\tthis.regexCache.set(fromPattern, new RegExp(`^${fromPattern}$`))\r\n\t\t}\r\n\r\n\t\tthis.data.get(fromPattern).set(toPattern, transition)\r\n\t\tthis.regexCache.set(toPattern, new RegExp(`^${toPattern}$`))\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param {{ raw: string, href: string, hasHash: boolean, pathname: string }} currentUrl\r\n\t * @param {{ raw: string, href: string, hasHash: boolean, pathname: string }} nextUrl\r\n\t * @return {string|null}\r\n\t */\r\n\tfindMatch(currentUrl, nextUrl) {\r\n\t\t// Loop through all from patterns\r\n\t\tfor (const [fromPattern, potentialMatches] of this.data) {\r\n\t\t\t// If we have a match\r\n\t\t\tif (currentUrl.pathname.match(this.regexCache.get(fromPattern))) {\r\n\t\t\t\t// loop through all associated to patterns\r\n\t\t\t\tfor (const [toPattern, transition] of potentialMatches) {\r\n\t\t\t\t\t// If we find a match, return it\r\n\t\t\t\t\tif (nextUrl.pathname.match(this.regexCache.get(toPattern))) {\r\n\t\t\t\t\t\treturn transition\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbreak\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn null\r\n\t}\r\n}\r\n","import E from '@unseenco/e'\r\nimport { appendScript, parseDom, processUrl, reloadScript } from './helpers'\r\nimport Transition from './Transition'\r\nimport Renderer from './Renderer'\r\nimport RouteStore from './RouteStore'\r\n\r\nconst IN_PROGRESS = 'A transition is currently in progress'\r\n\r\n/**\r\n * @typedef CacheEntry\r\n * @type {object}\r\n * @property {Renderer} renderer\r\n * @property {Document|Node} page\r\n * @property {array} scripts\r\n * @property {boolean} skipCache\r\n * @property {string} title\r\n * @property {HTMLElement|Element} content\r\n */\r\n\r\nexport default class Core {\r\n\tisTransitioning = false\r\n\r\n\t/**\r\n\t * @type {CacheEntry|null}\r\n\t */\r\n\tcurrentCacheEntry = null\r\n\r\n\t/**\r\n\t * @type {Map<string, CacheEntry>}\r\n\t */\r\n\tcache = new Map()\r\n\r\n\t/**\r\n\t * @param {{\r\n\t * \t\tlinks?: string,\r\n\t * \t\tremoveOldContent?: boolean,\r\n\t * \t\tallowInterruption?: boolean,\r\n\t * \t\tbypassCache?: boolean,\r\n\t * \t\trenderers?: Object.<string, Renderer>,\r\n\t * \t\ttransitions?: Object.<string, Transition>,\r\n\t * \t\treloadJsFilter?: boolean|function(HTMLElement): boolean\r\n\t * }} parameters\r\n\t */\r\n\tconstructor(parameters = {}) {\r\n\t\tconst {\r\n\t\t\tlinks = 'a:not([target]):not([href^=\\\\#]):not([data-taxi-ignore])',\r\n\t\t\tremoveOldContent = true,\r\n\t\t\tallowInterruption = false,\r\n\t\t\tbypassCache = false,\r\n\t\t\trenderers = {\r\n\t\t\t\tdefault: Renderer\r\n\t\t\t},\r\n\t\t\ttransitions = {\r\n\t\t\t\tdefault: Transition\r\n\t\t\t},\r\n\t\t\treloadJsFilter = (element) => element.dataset.taxiReload !== undefined\r\n\t\t} = parameters\r\n\r\n\t\tthis.renderers = renderers\r\n\t\tthis.transitions = transitions\r\n\t\tthis.defaultRenderer = this.renderers.default || Renderer\r\n\t\tthis.defaultTransition = this.transitions.default || Transition\r\n\t\tthis.wrapper = document.querySelector('[data-taxi]')\r\n\t\tthis.reloadJsFilter = reloadJsFilter\r\n\t\tthis.removeOldContent = removeOldContent\r\n\t\tthis.allowInterruption = allowInterruption\r\n\t\tthis.bypassCache = bypassCache\r\n\t\tthis.cache = new Map()\r\n\t\tthis.isPopping = false\r\n\r\n\t\t// Add delegated link events\r\n\t\tthis.attachEvents(links)\r\n\r\n\t\tthis.currentLocation = processUrl(window.location.href)\r\n\r\n\t\t// as this is the initial page load, prime this page into the cache\r\n\t\tthis.cache.set(this.currentLocation.href, this.createCacheEntry(document.cloneNode(true)))\r\n\r\n\t\t// fire the current Renderer enter methods\r\n\t\tthis.currentCacheEntry = this.cache.get(this.currentLocation.href)\r\n\t\tthis.currentCacheEntry.renderer.initialLoad()\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} renderer\r\n\t */\r\n\tsetDefaultRenderer(renderer) {\r\n\t\tthis.defaultRenderer = this.renderers[renderer]\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} transition\r\n\t */\r\n\tsetDefaultTransition(transition) {\r\n\t\tthis.defaultTransition = this.transitions[transition]\r\n\t}\r\n\r\n\t/**\r\n\t * Registers a route into the RouteStore\r\n\t *\r\n\t * @param {string} fromPattern\r\n\t * @param {string} toPattern\r\n\t * @param {string} transition\r\n\t */\r\n\taddRoute(fromPattern, toPattern, transition) {\r\n\t\tif (!this.router) {\r\n\t\t\tthis.router = new RouteStore()\r\n\t\t}\r\n\r\n\t\tthis.router.add(fromPattern, toPattern, transition)\r\n\t}\r\n\r\n\t/**\r\n\t * Prime the cache for a given URL\r\n\t *\r\n\t * @param {string} url\r\n\t * @param {boolean} [preloadAssets]\r\n\t * @return {Promise}\r\n\t */\r\n\tpreload(url, preloadAssets = false) {\r\n\t\t// convert relative URLs to absolute\r\n\t\turl = processUrl(url).href\r\n\r\n\t\tif (!this.cache.has(url)) {\r\n\t\t\treturn this.fetch(url, false)\r\n\t\t\t\t.then(async (newPage) => {\r\n\t\t\t\t\tthis.cache.set(url, this.createCacheEntry(newPage))\r\n\r\n\t\t\t\t\tif (preloadAssets) {\r\n\t\t\t\t\t\tthis.cache.get(url).renderer.createDom()\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t}\r\n\r\n\t\treturn Promise.resolve()\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the HTML cache for a given URL.\r\n\t * If no URL is passed, then cache for the current page is updated.\r\n\t * Useful when adding/removing content via AJAX such as a search page or infinite loader.\r\n\t *\r\n\t * @param {string} [url]\r\n\t */\r\n\tupdateCache(url) {\r\n\t\tconst key = processUrl(url || window.location.href).href\r\n\r\n\t\tif (this.cache.has(key)) {\r\n\t\t\tthis.cache.delete(key)\r\n\t\t}\r\n\r\n\t\tthis.cache.set(key, this.createCacheEntry(document.cloneNode(true)))\r\n\t}\r\n\r\n\t/**\r\n\t * Clears the cache for a given URL.\r\n\t * If no URL is passed, then cache for the current page is cleared.\r\n\t *\r\n\t * @param {string} [url]\r\n\t */\r\n\tclearCache(url) {\r\n\t\tconst key = processUrl(url || window.location.href).href\r\n\r\n\t\tif (this.cache.has(key)) {\r\n\t\t\tthis.cache.delete(key)\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} url\r\n\t * @param {string|false} [transition]\r\n\t * @param {string|false|HTMLElement} [trigger]\r\n\t * @return {Promise<void|Error>}\r\n\t */\r\n\tnavigateTo(url, transition = false, trigger = false) {\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\t// Don't allow multiple navigations to occur at once\r\n\t\t\tif (!this.allowInterruption && this.isTransitioning) {\r\n\t\t\t\treject(new Error(IN_PROGRESS))\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\r\n\t\t\tthis.isTransitioning = true\r\n\t\t\tthis.isPopping = true\r\n\t\t\tthis.targetLocation = processUrl(url)\r\n\t\t\tthis.popTarget = window.location.href\r\n\r\n\t\t\tconst TransitionClass = new (this.chooseTransition(transition))({ wrapper: this.wrapper })\r\n\r\n\t\t\tlet navigationPromise\r\n\r\n\t\t\tif (this.bypassCache || !this.cache.has(this.targetLocation.href) || this.cache.get(this.targetLocation.href).skipCache) {\r\n\t\t\t\tconst fetched = this.fetch(this.targetLocation.raw)\r\n\t\t\t\t\t.then((newPage) => {\r\n\t\t\t\t\t\tthis.cache.set(this.targetLocation.href, this.createCacheEntry(newPage))\r\n\t\t\t\t\t\tthis.cache.get(this.targetLocation.href).renderer.createDom()\r\n\t\t\t\t\t})\r\n\r\n\t\t\t\tnavigationPromise = this.beforeFetch(this.targetLocation, TransitionClass, trigger)\r\n\t\t\t\t\t.then(async () => {\r\n\t\t\t\t\t\treturn fetched.then(async (newPage) => {\r\n\t\t\t\t\t\t\treturn await this.afterFetch(this.targetLocation, TransitionClass, this.cache.get(this.targetLocation.href), trigger)\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t})\r\n\t\t\t} else {\r\n\t\t\t\tthis.cache.get(this.targetLocation.href).renderer.createDom()\r\n\r\n\t\t\t\tnavigationPromise = this.beforeFetch(this.targetLocation, TransitionClass, trigger)\r\n\t\t\t\t\t.then(async () => {\r\n\t\t\t\t\t\treturn await this.afterFetch(this.targetLocation, TransitionClass, this.cache.get(this.targetLocation.href), trigger)\r\n\t\t\t\t\t})\r\n\t\t\t}\r\n\r\n\t\t\tnavigationPromise.then(() => {\r\n\t\t\t\tresolve()\r\n\t\t\t})\r\n\t\t})\r\n\t}\r\n\r\n\t/**\r\n\t * Add an event listener.\r\n\t * @param {string} event\r\n\t * @param {any} callback\r\n\t */\r\n\ton(event, callback) {\r\n\t\tE.on(event, callback)\r\n\t}\r\n\r\n\t/**\r\n\t * Remove an event listener.\r\n\t * @param {string} event\r\n\t * @param {any} [callback]\r\n\t */\r\n\toff(event, callback) {\r\n\t\tE.off(event, callback)\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t * @param {{ raw: string, href: string, hasHash: boolean, pathname: string }} url\r\n\t * @param {Transition} TransitionClass\r\n\t * @param {string|HTMLElement|false} trigger\r\n\t * @return {Promise<void>}\r\n\t */\r\n\tbeforeFetch(url, TransitionClass, trigger) {\r\n\t\tE.emit('NAVIGATE_OUT', {\r\n\t\t\tfrom: this.currentCacheEntry,\r\n\t\t\ttrigger\r\n\t\t})\r\n\r\n\t\treturn new Promise((resolve) => {\r\n\t\t\tthis.currentCacheEntry.renderer.leave(TransitionClass, trigger, this.removeOldContent)\r\n\t\t\t\t.then(() => {\r\n\t\t\t\t\tif (trigger !== 'popstate') {\r\n\t\t\t\t\t\twindow.history.pushState({}, '', url.raw)\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tresolve()\r\n\t\t\t\t})\r\n\t\t})\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t * @param {{ raw: string, href: string, host: string, hasHash: boolean, pathname: string }} url\r\n\t * @param {Transition} TransitionClass\r\n\t * @param {CacheEntry} entry\r\n\t * @param {string|HTMLElement|false} trigger\r\n\t * @return {Promise<void>}\r\n\t */\r\n\tafterFetch(url, TransitionClass, entry, trigger) {\r\n\t\tthis.currentLocation = url\r\n\t\tthis.popTarget = this.currentLocation.href\r\n\r\n\t\treturn new Promise((resolve) => {\r\n\t\t\tentry.renderer.update()\r\n\r\n\t\t\tE.emit('NAVIGATE_IN', {\r\n\t\t\t\tfrom: this.currentCacheEntry,\r\n\t\t\t\tto: entry,\r\n\t\t\t\ttrigger\r\n\t\t\t})\r\n\r\n\t\t\tif (this.reloadJsFilter) {\r\n\t\t\t\tthis.loadScripts(entry.scripts)\r\n\t\t\t}\r\n\r\n\t\t\tentry.renderer.enter(TransitionClass, trigger)\r\n\t\t\t\t.then(() => {\r\n\t\t\t\t\tE.emit('NAVIGATE_END', {\r\n\t\t\t\t\t\tfrom: this.currentCacheEntry,\r\n\t\t\t\t\t\tto: entry,\r\n\t\t\t\t\t\ttrigger\r\n\t\t\t\t\t})\r\n\r\n\t\t\t\t\tthis.currentCacheEntry = entry\r\n\t\t\t\t\tthis.isTransitioning = false\r\n\t\t\t\t\tthis.isPopping = false\r\n\t\t\t\t\tresolve()\r\n\t\t\t\t})\r\n\t\t})\r\n\t}\r\n\r\n\t/**\r\n\t * Load up scripts from the target page if needed\r\n\t *\r\n\t * @param {HTMLElement[]} cachedScripts\r\n\t */\r\n\tloadScripts(cachedScripts) {\r\n\t\tconst newScripts = [...cachedScripts]\r\n\t\tconst currentScripts = Array.from(document.querySelectorAll('script')).filter(this.reloadJsFilter)\r\n\r\n\t\t// loop through all new scripts\r\n\t\tfor (let i = 0; i < currentScripts.length; i++) {\r\n\t\t\tfor (let n = 0; n < newScripts.length; n++) {\r\n\t\t\t\tif (currentScripts[i].outerHTML === newScripts[n].outerHTML) {\r\n\t\t\t\t\treloadScript(currentScripts[i])\r\n\t\t\t\t\tnewScripts.splice(n, 1)\r\n\t\t\t\t\tbreak\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (const script of newScripts) {\r\n\t\t\tappendScript(script)\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t * @param {string} links\r\n\t */\r\n\tattachEvents(links) {\r\n\t\tE.delegate('click', links, this.onClick)\r\n\t\tE.on('popstate', window, this.onPopstate)\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t * @param {MouseEvent} e\r\n\t */\r\n\tonClick = (e) => {\r\n\t\tif (!(e.metaKey || e.ctrlKey)) {\r\n\t\t\tconst target = processUrl(e.currentTarget.href)\r\n\t\t\tthis.currentLocation = processUrl(window.location.href)\r\n\r\n\t\t\tif (this.currentLocation.host !== target.host) {\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\r\n\t\t\t// the target is a new URL, or is removing the hash from the current URL\r\n\t\t\tif (this.currentLocation.href !== target.href || (this.currentLocation.hasHash && !target.hasHash)) {\r\n\t\t\t\te.preventDefault()\r\n\t\t\t\t// noinspection JSIgnoredPromiseFromCall\r\n\t\t\t\tthis.navigateTo(target.raw, e.currentTarget.dataset.transition || false, e.currentTarget).catch(err => console.warn(err))\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\r\n\t\t\t// a click to the current URL was detected\r\n\t\t\tif (!this.currentLocation.hasHash && !target.hasHash) {\r\n\t\t\t\te.preventDefault()\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t * @return {void|boolean}\r\n\t */\r\n\tonPopstate = () => {\r\n\t\t// don't trigger for on-page anchors\r\n\t\tif (window.location.pathname === this.currentLocation.pathname && !this.isPopping) {\r\n\t\t\treturn false\r\n\t\t}\r\n\r\n\t\tif (!this.allowInterruption && (this.isTransitioning || this.isPopping)) {\r\n\t\t\t// overwrite history state with current page if currently navigating\r\n\t\t\twindow.history.pushState({}, '', this.popTarget)\r\n\t\t\tconsole.warn(IN_PROGRESS)\r\n\t\t\treturn false\r\n\t\t}\r\n\r\n\t\tif (!this.isPopping) {\r\n\t\t\tthis.popTarget = window.location.href\r\n\t\t}\r\n\r\n\t\tthis.isPopping = true\r\n\r\n\t\t// noinspection JSIgnoredPromiseFromCall\r\n\t\tthis.navigateTo(window.location.href, false, 'popstate')\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t * @param {string} url\r\n\t * @param {boolean} [runFallback]\r\n\t * @return {Promise<Document>}\r\n\t */\r\n\tfetch(url, runFallback = true) {\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tfetch(url, {\r\n\t\t\t\tmode: 'same-origin',\r\n\t\t\t\tmethod: 'GET',\r\n\t\t\t\theaders: { 'X-Requested-With': 'Taxi' },\r\n\t\t\t\tcredentials: 'same-origin'\r\n\t\t\t})\r\n\t\t\t\t.then((response) => {\r\n\t\t\t\t\tif (!response.ok) {\r\n\t\t\t\t\t\treject('Taxi encountered a non 2xx HTTP status code')\r\n\r\n\t\t\t\t\t\tif (runFallback) {\r\n\t\t\t\t\t\t\twindow.location.href = url\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn response.text()\r\n\t\t\t\t})\r\n\t\t\t\t.then((htmlString) => {\r\n\t\t\t\t\tresolve(parseDom(htmlString))\r\n\t\t\t\t})\r\n\t\t\t\t.catch((err) => {\r\n\t\t\t\t\treject(err)\r\n\r\n\t\t\t\t\tif (runFallback) {\r\n\t\t\t\t\t\twindow.location.href = url\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t})\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t * @param {string|false} transition\r\n\t * @return {Transition|function}\r\n\t */\r\n\tchooseTransition(transition) {\r\n\t\tif (transition) {\r\n\t\t\treturn this.transitions[transition]\r\n\t\t}\r\n\r\n\t\tconst routeTransition = this.router?.findMatch(this.currentLocation, this.targetLocation)\r\n\r\n\t\tif (routeTransition) {\r\n\t\t\treturn this.transitions[routeTransition]\r\n\t\t}\r\n\r\n\t\treturn this.defaultTransition\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t * @param {Document|Node} page\r\n\t * @return {CacheEntry}\r\n\t */\r\n\tcreateCacheEntry(page) {\r\n\t\tconst content = page.querySelector('[data-taxi-view]')\r\n\t\tconst Renderer = content.dataset.taxiView.length ? this.renderers[content.dataset.taxiView] : this.defaultRenderer\r\n\r\n\t\tif (!Renderer) {\r\n\t\t\tconsole.warn(`The Renderer \"${content.dataset.taxiView}\" was set in the data-taxi-view of the requested page, but not registered in Taxi.`)\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tpage,\r\n\t\t\tcontent,\r\n\t\t\tskipCache: content.hasAttribute('data-taxi-nocache'),\r\n\t\t\tscripts: this.reloadJsFilter ? Array.from(page.querySelectorAll('script')).filter(this.reloadJsFilter) : [],\r\n\t\t\ttitle: page.title,\r\n\t\t\trenderer: new Renderer({\r\n\t\t\t\twrapper: this.wrapper,\r\n\t\t\t\ttitle: page.title,\r\n\t\t\t\tcontent,\r\n\t\t\t\tpage\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n}\r\n"],"names":["parser","DOMParser","processUrl","url","details","URL","window","location","origin","normalized","hash","length","replace","hasHash","pathname","host","raw","href","appendScript","node","parentNode","tagName","document","head","appendChild","duplicateScript","body","replacement","createElement","k","attributes","attr","setAttribute","nodeName","nodeValue","innerHTML","Transition","constructor","wrapper","this","leave","props","Promise","resolve","onLeave","done","enter","onEnter","Renderer","content","page","title","_contentString","outerHTML","_DOM","lastElementChild","onEnterCompleted","onLeaveCompleted","initialLoad","update","firstElementChild","createDom","remove","transition","trigger","to","then","removeOldContent","from","RouteStore","data","Map","regexCache","add","fromPattern","toPattern","has","set","RegExp","get","findMatch","currentUrl","nextUrl","potentialMatches","match","IN_PROGRESS","Core","parameters","isTransitioning","currentCacheEntry","cache","onClick","e","metaKey","ctrlKey","target","currentTarget","currentLocation","preventDefault","navigateTo","dataset","catch","err","console","warn","onPopstate","isPopping","allowInterruption","popTarget","history","pushState","links","bypassCache","renderers","default","transitions","reloadJsFilter","element","undefined","taxiReload","defaultRenderer","defaultTransition","querySelector","attachEvents","createCacheEntry","cloneNode","renderer","setDefaultRenderer","setDefaultTransition","addRoute","router","preload","preloadAssets","fetch","async","newPage","_this","updateCache","key","delete","clearCache","reject","Error","targetLocation","TransitionClass","chooseTransition","navigationPromise","skipCache","fetched","beforeFetch","_this2","afterFetch","on","event","callback","E","off","emit","entry","loadScripts","scripts","cachedScripts","newScripts","currentScripts","Array","querySelectorAll","filter","i","n","replaceChild","splice","script","delegate","runFallback","mode","method","headers","credentials","response","ok","text","htmlString","html","parseFromString","routeTransition","_this$router","taxiView","hasAttribute"],"mappings":"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"}