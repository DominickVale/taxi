{"version":3,"file":"taxi.modern.js","sources":["../src/helpers.js","../src/RouteStore.js","../src/Core.js","../src/Transition.js","../src/Renderer.js"],"sourcesContent":["const parser = new DOMParser()\n\n/**\n * Parse a HTML string into a proper Document.\n * @param {string|Document} html\n * @return {Document|*}\n */\nexport function parseDom(html) {\n\treturn typeof html === 'string' ? parser.parseFromString(html, 'text/html') : html\n}\n\n/**\n * Extract details from a given URL string. Assumed to be on the current TLD.\n * @param {string} url\n * @return {{raw: string, href: string, hasHash: boolean, pathname: string}}\n */\nexport function processUrl(url) {\n\tconst details = new URL(url, window.location.origin)\n\tlet normalized = null\n\n\tif (details.hash.length) {\n\t\tnormalized = url.replace(details.hash, '')\n\t}\n\n\treturn {\n\t\thasHash: details.hash.length > 0,\n\t\tpathname: details.pathname,\n\t\traw: url,\n\t\thref: normalized || details.href\n\t}\n}\n\n/**\n * Reloads a provided script/stylesheet by replacing with itself.\n * @param {HTMLElement} node\n */\nexport function reloadScript(node) {\n\tnode.parentNode.replaceChild(duplicateScript(node), node)\n}\n\n/**\n * Loads a provided script/stylesheet by appending a clone to the current document.\n * @param {HTMLElement} node\n */\nexport function appendScript(node) {\n\tif (node.parentNode.tagName === 'HEAD') {\n\t\tdocument.head.appendChild(duplicateScript(node))\n\t} else {\n\t\tdocument.body.appendChild(duplicateScript(node))\n\t}\n}\n\n/**\n * Creates a clone of a given HTMLElement\n * @param {HTMLElement} node\n * @return {HTMLElement}\n */\nexport function duplicateScript(node) {\n\tconst replacement = document.createElement('SCRIPT')\n\n\t// Loop Over Attributes\n\tfor (let k = 0; k < node.attributes.length; k++) {\n\t\t// Get Attribute\n\t\tconst attr = node.attributes[k]\n\n\t\t// Set Attribute\n\t\treplacement.setAttribute(attr.nodeName, attr.nodeValue)\n\t}\n\n\t// Inline Script\n\tif (node.innerHTML) {\n\t\treplacement.innerHTML = node.innerHTML\n\t}\n\n\treturn replacement\n}\n","export default class RouteStore {\n\t/**\n\t * @type {Map<string, Map<string, string>>}\n\t */\n\tdata = new Map()\n\n\t/**\n\t * @type {Map<string, RegExp>}\n\t */\n\tregexCache = new Map()\n\n\t/**\n\t *\n\t * @param {string} fromPattern\n\t * @param {string} toPattern\n\t * @param {string} transition\n\t */\n\tadd(fromPattern, toPattern, transition) {\n\t\tif (!this.data.has(fromPattern)) {\n\t\t\tthis.data.set(fromPattern, new Map())\n\t\t\tthis.regexCache.set(fromPattern, new RegExp(`^${fromPattern}$`))\n\t\t}\n\n\t\tthis.data.get(fromPattern).set(toPattern, transition)\n\t\tthis.regexCache.set(toPattern, new RegExp(`^${toPattern}$`))\n\t}\n\n\t/**\n\t *\n\t * @param {{ raw: string, href: string, hasHash: boolean, pathname: string }} currentUrl\n\t * @param {{ raw: string, href: string, hasHash: boolean, pathname: string }} nextUrl\n\t * @return {string|null}\n\t */\n\tfindMatch(currentUrl, nextUrl) {\n\t\t// Loop through all from patterns\n\t\tfor (const [fromPattern, potentialMatches] of this.data) {\n\t\t\t// If we have a match\n\t\t\tif (currentUrl.pathname.match(this.regexCache.get(fromPattern))) {\n\t\t\t\t// loop through all associated to patterns\n\t\t\t\tfor (const [toPattern, transition] of potentialMatches) {\n\t\t\t\t\t// If we find a match, return it\n\t\t\t\t\tif (nextUrl.pathname.match(this.regexCache.get(toPattern))) {\n\t\t\t\t\t\treturn transition\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\n\t\treturn null\n\t}\n}\n","import E from '@unseenco/e'\r\nimport { appendScript, parseDom, processUrl, reloadScript } from './helpers'\r\nimport { Transition, Renderer } from './taxi'\r\nimport RouteStore from './RouteStore'\r\n\r\n/**\r\n * @typedef CacheEntry\r\n * @type {object}\r\n * @property {Renderer} renderer\r\n * @property {Document|Node} page\r\n * @property {array} scripts\r\n * @property {string} title\r\n * @property {HTMLElement|Element} content\r\n */\r\n\r\nexport default class Core {\r\n\tisTransitioning = false\r\n\r\n\t/**\r\n\t * @type {CacheEntry|null}\r\n\t */\r\n\tcurrentCacheEntry = null\r\n\r\n\t/**\r\n\t * @type {Map<string, CacheEntry>}\r\n\t */\r\n\tcache = new Map()\r\n\r\n\t/**\r\n\t * @param {{\r\n\t * \t\tlinks?: string,\r\n\t * \t\tremoveOldContent?: boolean,\r\n\t * \t\trenderers?: Object.<string, Renderer>,\r\n\t * \t\ttransitions?: Object.<string, Transition>,\r\n\t * \t\treloadJsFilter?: boolean|function(HTMLElement): boolean\r\n\t * }} parameters\r\n\t */\r\n\tconstructor(parameters = {}) {\r\n\t\tconst {\r\n\t\t\tlinks = 'a:not([target]):not([href^=\\\\#]):not([data-taxi-ignore])',\r\n\t\t\tremoveOldContent = true,\r\n\t\t\trenderers = {\r\n\t\t\t\tdefault: Renderer\r\n\t\t\t},\r\n\t\t\ttransitions = {\r\n\t\t\t\tdefault: Transition\r\n\t\t\t},\r\n\t\t\treloadJsFilter = (element) => !(element?.id === '__bs_script__' || element?.src.includes('browser-sync-client.js'))\r\n\t\t} = parameters\r\n\r\n\t\tthis.renderers = renderers\r\n\t\tthis.transitions = transitions\r\n\t\tthis.defaultRenderer = this.renderers.default || Renderer\r\n\t\tthis.defaultTransition = this.transitions.default || Transition\r\n\t\tthis.wrapper = document.querySelector('[data-taxi]')\r\n\t\tthis.reloadJsFilter = reloadJsFilter\r\n\t\tthis.removeOldContent = removeOldContent\r\n\t\tthis.cache = new Map()\r\n\r\n\t\t// Add delegated link events\r\n\t\tthis.attachEvents(links)\r\n\r\n\t\tthis.currentLocation = processUrl(window.location.href)\r\n\r\n\t\t// as this is the initial page load, prime this page into the cache\r\n\t\tthis.cache.set(this.currentLocation.href, this.createCacheEntry(document.cloneNode(true)))\r\n\r\n\t\t// fire the current Renderer enter methods\r\n\t\tthis.currentCacheEntry = this.cache.get(this.currentLocation.href)\r\n\t\tthis.currentCacheEntry.renderer.initialLoad()\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} renderer\r\n\t */\r\n\tsetDefaultRenderer(renderer) {\r\n\t\tthis.defaultRenderer = this.renderers[renderer]\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} transition\r\n\t */\r\n\tsetDefaultTransition(transition) {\r\n\t\tthis.defaultTransition = this.transitions[transition]\r\n\t}\r\n\r\n\t/**\r\n\t * Registers a route into the RouteStore\r\n\t *\r\n\t * @param {string} fromPattern\r\n\t * @param {string} toPattern\r\n\t * @param {string} transition\r\n\t */\r\n\taddRoute(fromPattern, toPattern, transition) {\r\n\t\tif (!this.router) {\r\n\t\t\tthis.router = new RouteStore()\r\n\t\t}\r\n\r\n\t\tthis.router.add(fromPattern, toPattern, transition)\r\n\t}\r\n\r\n\t/**\r\n\t * Prime the cache for a given URL\r\n\t *\r\n\t * @param {string} url\r\n\t * @return {Promise}\r\n\t */\r\n\tpreload(url) {\r\n\t\t// convert relative URLs to absolute\r\n\t\turl = processUrl(url).href\r\n\r\n\t\tif (!this.cache.has(url)) {\r\n\t\t\treturn this.fetch(url)\r\n\t\t\t\t.then(async (newPage) => {\r\n\t\t\t\t\tthis.cache.set(url, this.createCacheEntry(newPage))\r\n\t\t\t\t})\r\n\t\t}\r\n\r\n\t\treturn Promise.resolve()\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the HTML cache for the current URL\r\n\t * Useful when adding/removing content via AJAX such as a search page or infinite loader\r\n\t */\r\n\tupdateCache() {\r\n\t\tconst key = processUrl(window.location.href).href\r\n\r\n\t\tif (this.cache.has(key)) {\r\n\t\t\tthis.cache.delete(key)\r\n\t\t\tthis.cache.set(key, this.createCacheEntry(document.cloneNode(true)))\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Clears the cache for a given URL.\r\n\t * If no URL is passed, then cache for the current page is cleared.\r\n\t *\r\n\t * @param {string} [url]\r\n\t */\r\n\tclearCache(url) {\r\n\t\tconst key = processUrl(url || window.location.href).href\r\n\r\n\t\tif (this.cache.has(key)) {\r\n\t\t\tthis.cache.delete(key)\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} url\r\n\t * @param {string|false} [transition]\r\n\t * @param {string|false|HTMLElement} [trigger]\r\n\t * @return {Promise<void|Error>}\r\n\t */\r\n\tnavigateTo(url, transition = false, trigger = false) {\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\t// Don't allow multiple navigations to occur at once\r\n\t\t\tif (this.isTransitioning) {\r\n\t\t\t\treject(new Error('A transition is currently in progress'))\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\r\n\t\t\tthis.targetLocation = processUrl(url)\r\n\r\n\t\t\tconst TransitionClass = new (this.chooseTransition(transition))({ wrapper: this.wrapper })\r\n\r\n\t\t\tthis.beforeFetch(this.targetLocation, TransitionClass, trigger)\r\n\t\t\t\t.then(async () => {\r\n\t\t\t\t\tif (this.cache.has(this.targetLocation.href)) {\r\n\t\t\t\t\t\treturn await this.afterFetch(this.targetLocation, TransitionClass, this.cache.get(this.targetLocation.href), trigger)\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn this.fetch(this.targetLocation.raw).then(async (newPage) => {\r\n\t\t\t\t\t\t\treturn await this.afterFetch(this.targetLocation, TransitionClass, this.createCacheEntry(newPage), trigger)\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\t.then(() => {\r\n\t\t\t\t\tresolve()\r\n\t\t\t\t})\r\n\t\t})\r\n\t}\r\n\r\n\t/**\r\n\t * Add an event listener.\r\n\t * @param {string} event\r\n\t * @param {any} callback\r\n\t */\r\n\ton(event, callback) {\r\n\t\tE.on(event, callback)\r\n\t}\r\n\r\n\t/**\r\n\t * Remove an event listener.\r\n\t * @param {string} event\r\n\t * @param {any} [callback]\r\n\t */\r\n\toff(event, callback) {\r\n\t\tE.off(event, callback)\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t * @param {{ raw: string, href: string, hasHash: boolean, pathname: string }} url\r\n\t * @param {Transition} TransitionClass\r\n\t * @param {string|HTMLElement|false} trigger\r\n\t * @return {Promise<void>}\r\n\t */\r\n\tbeforeFetch(url, TransitionClass, trigger) {\r\n\t\tthis.isTransitioning = true\r\n\r\n\t\tE.emit('NAVIGATE_OUT', {\r\n\t\t\tfrom: this.currentCacheEntry,\r\n\t\t\ttrigger\r\n\t\t})\r\n\r\n\t\treturn new Promise((resolve) => {\r\n\t\t\tthis.currentCacheEntry.renderer.leave(TransitionClass, trigger, this.removeOldContent)\r\n\t\t\t\t.then(() => {\r\n\t\t\t\t\tif (trigger !== 'popstate') {\r\n\t\t\t\t\t\twindow.history.pushState({}, '', url.raw)\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tresolve()\r\n\t\t\t\t})\r\n\t\t})\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t * @param {{ raw: string, href: string, hasHash: boolean, pathname: string }} url\r\n\t * @param {Transition} TransitionClass\r\n\t * @param {CacheEntry} entry\r\n\t * @param {string|HTMLElement|false} trigger\r\n\t * @return {Promise<void>}\r\n\t */\r\n\tafterFetch(url, TransitionClass, entry, trigger) {\r\n\t\t// add this page to cache\r\n\t\tif (!this.cache.has(url.href)) {\r\n\t\t\tthis.cache.set(url.href, entry)\r\n\t\t}\r\n\r\n\t\tthis.currentLocation = url\r\n\r\n\t\treturn new Promise((resolve) => {\r\n\t\t\tentry.renderer.update()\r\n\r\n\t\t\tE.emit('NAVIGATE_IN', {\r\n\t\t\t\tfrom: this.currentCacheEntry,\r\n\t\t\t\tto: entry,\r\n\t\t\t\ttrigger\r\n\t\t\t})\r\n\r\n\t\t\tif (this.reloadJsFilter) {\r\n\t\t\t\tthis.loadScripts(entry.scripts)\r\n\t\t\t}\r\n\r\n\t\t\tentry.renderer.enter(TransitionClass, trigger)\r\n\t\t\t\t.then(() => {\r\n\t\t\t\t\tE.emit('NAVIGATE_END', {\r\n\t\t\t\t\t\tfrom: this.currentCacheEntry,\r\n\t\t\t\t\t\tto: entry,\r\n\t\t\t\t\t\ttrigger\r\n\t\t\t\t\t})\r\n\r\n\t\t\t\t\tthis.currentCacheEntry = entry\r\n\t\t\t\t\tthis.isTransitioning = false\r\n\t\t\t\t\tresolve()\r\n\t\t\t\t})\r\n\t\t})\r\n\t}\r\n\r\n\t/**\r\n\t * Load up scripts from the target page if needed\r\n\t *\r\n\t * @param {HTMLElement[]} cachedScripts\r\n\t */\r\n\tloadScripts(cachedScripts) {\r\n\t\tconst newScripts = [...cachedScripts]\r\n\t\tconst currentScripts = [...document.querySelectorAll('script:not([data-no-reload])')].filter(this.reloadJsFilter)\r\n\r\n\t\t// loop through all new scripts\r\n\t\tfor (let i = 0; i < currentScripts.length; i++) {\r\n\t\t\tfor (let n = 0; n < newScripts.length; n++) {\r\n\t\t\t\tif (currentScripts[i].outerHTML === newScripts[n].outerHTML) {\r\n\t\t\t\t\treloadScript(currentScripts[i])\r\n\t\t\t\t\tnewScripts.splice(n, 1)\r\n\t\t\t\t\tbreak\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (const script of newScripts) {\r\n\t\t\tappendScript(script)\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t * @param {string} links\r\n\t */\r\n\tattachEvents(links) {\r\n\t\tE.delegate('click', links, this.onClick)\r\n\t\tE.on('popstate', window, this.onPopstate)\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t * @param {MouseEvent} e\r\n\t */\r\n\tonClick = (e) => {\r\n\t\tif (!(e.metaKey || e.ctrlKey)) {\r\n\t\t\tconst target = processUrl(e.currentTarget.href)\r\n\t\t\tthis.currentLocation = processUrl(window.location.href)\r\n\r\n\t\t\t// the target is a new URL, or is removing the hash from the current URL\r\n\t\t\tif (this.currentLocation.href !== target.href || (this.currentLocation.hasHash && !target.hasHash)) {\r\n\t\t\t\te.preventDefault()\r\n\t\t\t\t// noinspection JSIgnoredPromiseFromCall\r\n\t\t\t\tthis.navigateTo(target.raw, e.currentTarget.dataset.transition || false, e.currentTarget)\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\r\n\t\t\t// a click to the current URL was detected\r\n\t\t\tif (!this.currentLocation.hasHash && !target.hasHash) {\r\n\t\t\t\te.preventDefault()\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t * @return {boolean}\r\n\t */\r\n\tonPopstate = () => {\r\n\t\t// don't trigger for on-page anchors\r\n\t\tif (window.location.pathname === this.currentLocation.pathname) {\r\n\t\t\treturn false\r\n\t\t}\r\n\r\n\t\tif (this.isTransitioning) {\r\n\t\t\t// overwrite history state with current page if currently navigating\r\n\t\t\twindow.history.pushState({}, '', this.currentLocation.href)\r\n\t\t\treturn false\r\n\t\t}\r\n\r\n\t\t// noinspection JSIgnoredPromiseFromCall\r\n\t\tthis.navigateTo(window.location.href, false, 'popstate')\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t * @param {string} url\r\n\t * @return {Promise<Document>}\r\n\t */\r\n\tfetch(url) {\r\n\t\treturn new Promise((resolve) => {\r\n\t\t\tfetch(url, {\r\n\t\t\t\tmode: 'same-origin',\r\n\t\t\t\tmethod: 'GET',\r\n\t\t\t\theaders: { 'X-Requested-With': 'Taxi' },\r\n\t\t\t\tcredentials: 'same-origin'\r\n\t\t\t})\r\n\t\t\t\t.then((response) => {\r\n\t\t\t\t\tif (!response.ok) {\r\n\t\t\t\t\t\tconsole.warn('Taxi encountered a non 2xx HTTP status code')\r\n\t\t\t\t\t\twindow.location.href = url\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn response.text()\r\n\t\t\t\t})\r\n\t\t\t\t.then((htmlString) => {\r\n\t\t\t\t\tresolve(parseDom(htmlString))\r\n\t\t\t\t})\r\n\t\t\t\t.catch((err) => {\r\n\t\t\t\t\tconsole.warn(err)\r\n\t\t\t\t\twindow.location.href = url\r\n\t\t\t\t})\r\n\t\t})\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t * @param {string|false} transition\r\n\t * @return {Transition|function}\r\n\t */\r\n\tchooseTransition(transition) {\r\n\t\tif (transition) {\r\n\t\t\treturn this.transitions[transition]\r\n\t\t}\r\n\r\n\t\tconst routeTransition = this.router?.findMatch(this.currentLocation, this.targetLocation)\r\n\r\n\t\tif (routeTransition) {\r\n\t\t\treturn this.transitions[routeTransition]\r\n\t\t}\r\n\r\n\t\treturn this.defaultTransition\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t * @param {Document|Node} page\r\n\t * @return {CacheEntry}\r\n\t */\r\n\tcreateCacheEntry(page) {\r\n\t\tconst content = page.querySelector('[data-taxi-view]')\r\n\t\tconst Renderer = content.dataset.taxiView.length ? this.renderers[content.dataset.taxiView] : this.defaultRenderer\r\n\r\n\t\treturn {\r\n\t\t\tpage,\r\n\t\t\tcontent,\r\n\t\t\tscripts: this.reloadJsFilter ? [...page.querySelectorAll('script:not([data-no-reload])')].filter(this.reloadJsFilter) : [],\r\n\t\t\ttitle: page.title,\r\n\t\t\trenderer: new Renderer({\r\n\t\t\t\twrapper: this.wrapper,\r\n\t\t\t\ttitle: page.title,\r\n\t\t\t\tcontent,\r\n\t\t\t\tpage\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n}\r\n","export default class Transition {\r\n\t/**\r\n\t * @param {{wrapper: HTMLElement}} props\r\n\t */\r\n\tconstructor({ wrapper }) {\r\n\t\tthis.wrapper = wrapper\r\n\t}\r\n\r\n\t/**\r\n\t * @param {{ from: HTMLElement|Element, trigger: string|HTMLElement|false }} props\r\n\t * @return {Promise<void>}\r\n\t */\r\n\tleave(props) {\r\n\t\treturn new Promise((resolve) => {\r\n\t\t\tthis.onLeave({ ...props, done: resolve })\r\n\t\t})\r\n\t}\r\n\r\n\t/**\r\n\t * @param {{ to: HTMLElement|Element, trigger: string|HTMLElement|false }} props\r\n\t * @return {Promise<void>}\r\n\t */\r\n\tenter(props) {\r\n\t\treturn new Promise((resolve) => {\r\n\t\t\tthis.onEnter({ ...props, done: resolve })\r\n\t\t})\r\n\t}\r\n\r\n\t/**\r\n\t * Handle the transition leaving the previous page.\r\n\t * @param {{from: HTMLElement|Element, trigger: string|HTMLElement|false, done: function}} props\r\n\t */\r\n\tonLeave({ from, trigger, done }) {\r\n\t\tdone()\r\n\t}\r\n\r\n\t/**\r\n\t * Handle the transition entering the next page.\r\n\t * @param {{to: HTMLElement|Element, trigger: string|HTMLElement|false, done: function}} props\r\n\t */\r\n\tonEnter({ to, trigger, done }) {\r\n\t\tdone()\r\n\t}\r\n}\r\n","import Transition from \"./Transition\"\r\n\r\nexport default class Renderer {\r\n\t/**\r\n\t * @param {{content: HTMLElement|Element, page: Document|Node, title: string, wrapper: Element}} props\r\n\t */\r\n\tconstructor({ content, page, title, wrapper }) {\r\n\t\tthis._contentString = content.outerHTML\r\n\t\tthis.page = page\r\n\t\tthis.title = title\r\n\t\tthis.wrapper = wrapper\r\n\t\tthis.content = this.wrapper.lastElementChild\r\n\t}\r\n\r\n\tonEnter() {\r\n\r\n\t}\r\n\r\n\tonEnterCompleted() {\r\n\r\n\t}\r\n\r\n\tonLeave() {\r\n\r\n\t}\r\n\r\n\tonLeaveCompleted() {\r\n\r\n\t}\r\n\r\n\tinitialLoad() {\r\n\t\tthis.onEnter()\r\n\t\tthis.onEnterCompleted()\r\n\t}\r\n\r\n\tupdate() {\r\n\t\tdocument.title = this.title\r\n\t\tthis.wrapper.insertAdjacentHTML('beforeend', this._contentString)\r\n\t\tthis.content = this.wrapper.lastElementChild\r\n\t}\r\n\r\n\tremove() {\r\n\t\tthis.wrapper.firstElementChild.remove()\r\n\t}\r\n\r\n\t/**\r\n\t * Called when transitioning into the current page.\r\n\t * @param {Transition} transition\r\n\t * @param {string|HTMLElement|false} trigger\r\n\t * @return {Promise<null>}\r\n\t */\r\n\tenter(transition, trigger) {\r\n\t\treturn new Promise((resolve) => {\r\n\t\t\tthis.onEnter()\r\n\r\n\t\t\ttransition.enter({ trigger, to: this.content })\r\n\t\t\t\t.then(() => {\r\n\t\t\t\t\tthis.onEnterCompleted()\r\n\t\t\t\t\tresolve()\r\n\t\t\t\t})\r\n\t\t})\r\n\t}\r\n\r\n\t/**\r\n\t * Called when transitioning away from the current page.\r\n\t * @param {Transition} transition\r\n\t * @param {string|HTMLElement|false} trigger\r\n\t * @param {boolean} removeOldContent\r\n\t * @return {Promise<null>}\r\n\t */\r\n\tleave(transition, trigger, removeOldContent) {\r\n\t\treturn new Promise((resolve) => {\r\n\t\t\tthis.onLeave()\r\n\r\n\t\t\ttransition.leave({ trigger, from: this.content })\r\n\t\t\t\t.then(() => {\r\n\t\t\t\t\tif (removeOldContent) {\r\n\t\t\t\t\t\tthis.remove()\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis.onLeaveCompleted()\r\n\t\t\t\t\tresolve()\r\n\t\t\t\t})\r\n\t\t})\r\n\t}\r\n}\r\n"],"names":["parser","DOMParser","processUrl","url","details","URL","window","location","origin","normalized","hash","length","replace","hasHash","pathname","raw","href","appendScript","node","parentNode","tagName","document","head","appendChild","duplicateScript","body","replacement","createElement","k","attributes","attr","setAttribute","nodeName","nodeValue","innerHTML","RouteStore","data","Map","regexCache","add","fromPattern","toPattern","transition","this","has","set","RegExp","get","findMatch","currentUrl","nextUrl","potentialMatches","match","Core","constructor","parameters","isTransitioning","currentCacheEntry","cache","onClick","e","metaKey","ctrlKey","target","currentTarget","currentLocation","preventDefault","navigateTo","dataset","onPopstate","history","pushState","links","removeOldContent","renderers","default","Renderer","transitions","Transition","reloadJsFilter","element","id","src","includes","defaultRenderer","defaultTransition","wrapper","querySelector","attachEvents","createCacheEntry","cloneNode","renderer","initialLoad","setDefaultRenderer","setDefaultTransition","addRoute","router","preload","Promise","resolve","fetch","then","async","newPage","_this","updateCache","key","delete","clearCache","trigger","reject","Error","targetLocation","TransitionClass","chooseTransition","beforeFetch","_this2","afterFetch","on","event","callback","E","off","emit","from","leave","entry","update","to","loadScripts","scripts","enter","cachedScripts","newScripts","currentScripts","querySelectorAll","filter","i","n","outerHTML","replaceChild","splice","script","delegate","mode","method","headers","credentials","response","ok","console","warn","text","htmlString","html","parseFromString","catch","err","routeTransition","_this$router","page","content","taxiView","title","props","onLeave","done","onEnter","_contentString","lastElementChild","onEnterCompleted","onLeaveCompleted","insertAdjacentHTML","remove","firstElementChild"],"mappings":"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"}